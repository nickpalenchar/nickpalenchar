[["Map",1,2,9,10,119,120,649,650],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.13.2","content-config-digest","c18eb7201ef2d450","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[null],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"staticImportMetaEnv\":false,\"chromeDevtoolsWorkspace\":false},\"legacy\":{\"collections\":false}}","favs",["Map",11,12,37,38,75,76,96,97],"movies",{"id":11,"data":13,"body":19,"filePath":20,"digest":21,"rendered":22},{"title":14,"date":15,"external":16,"hide":17},"Fav Movies",["Date","2016-05-14T15:33:31.000Z"],false,[18],"date","ℹ️ _Work in progress: I'll be updating with links/images soon(?)_\n\n{% table %}\n---\n- Vice\n- Infinity Baby\n---\n- Eighth Grade\n- The Apprentice\n---\n- Blink Twice (2025)\n- The Worst Person In the World\n---\n- Thank You For Smoking\n- Game Night\n---\n- Jo Jo Rabbit\n- Dream Scenario\n---\n- The Apprentice\n- Ladybird\n---\n- Zombieland\n- The Social Network\n---\n- Don't Look Up\n---\n- I, Robot\n- Thoroughbreds\n{% /table %}","content/favs/movies.md","f07ed477fe844c53",{"html":23,"metadata":24},"\u003Cp>ℹ️ \u003Cem>Work in progress: I’ll be updating with links/images soon(?)\u003C/em>\u003C/p>\n\u003Ch2 id=\"-table\">{% table %}\u003C/h2>\n\u003Cul>\n\u003Cli>Vice\u003C/li>\n\u003Cli>Infinity Baby\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Eighth Grade\u003C/li>\n\u003Cli>The Apprentice\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Blink Twice (2025)\u003C/li>\n\u003Cli>The Worst Person In the World\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Thank You For Smoking\u003C/li>\n\u003Cli>Game Night\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Jo Jo Rabbit\u003C/li>\n\u003Cli>Dream Scenario\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>The Apprentice\u003C/li>\n\u003Cli>Ladybird\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Zombieland\u003C/li>\n\u003Cli>The Social Network\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Don’t Look Up\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>I, Robot\u003C/li>\n\u003Cli>Thoroughbreds\n{% /table %}\u003C/li>\n\u003C/ul>",{"headings":25,"localImagePaths":30,"remoteImagePaths":31,"frontmatter":32,"imagePaths":36},[26],{"depth":27,"slug":28,"text":29},2,"-table","${% table %}",[],[],{"title":14,"date":33,"external":16,"hide":34,"minutesRead":35},["Date","2016-05-14T15:33:31.000Z"],[18],"1 min read",[],"books",{"id":37,"data":39,"body":43,"filePath":44,"digest":45,"rendered":46},{"title":40,"date":41,"external":16,"hide":42},"Fav Books",["Date","2016-05-14T15:33:31.000Z"],[18],"ℹ️ _Work in progress: I'll be updating with links/images soon(?)_\n\nI mostly read non-fiction.\n\n## Life Changing\n\n{% table %}\n---\n- On the Shortness of Life (Seneca)\n- The War of Art\n---\n- The Defining Decade\n---\n{% /table %}\n\n## On Software\n{% table %}\n---\n- The Pragmatic Programmer\n---\n{% /table % }\n\n\n## More Non-Fiction\n\n{% table %}\n---\n- Big Magic\n- The Anxious Generation\n---\n- Digital Minimalism\n- 100 Essays to Change The Way You Think\n---\n- The Creative Habit\n- Algorithms to Live By\n---\n- My Morning Routine\n- Drink?: The New Science of Alcohol and Your Health\n---\n{% /table %}\n\n## Fiction\n{% table %}\n---\n- The Fountainhead\n{% /table %}","content/favs/books.md","f7abc33a987d24d2",{"html":47,"metadata":48},"\u003Cp>ℹ️ \u003Cem>Work in progress: I’ll be updating with links/images soon(?)\u003C/em>\u003C/p>\n\u003Cp>I mostly read non-fiction.\u003C/p>\n\u003Ch2 id=\"life-changing\">Life Changing\u003C/h2>\n\u003Ch2 id=\"-table\">{% table %}\u003C/h2>\n\u003Cul>\n\u003Cli>On the Shortness of Life (Seneca)\u003C/li>\n\u003Cli>The War of Art\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>The Defining Decade\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cp>{% /table %}\u003C/p>\n\u003Ch2 id=\"on-software\">On Software\u003C/h2>\n\u003Ch2 id=\"-table--1\">{% table %}\u003C/h2>\n\u003Cul>\n\u003Cli>The Pragmatic Programmer\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cp>{% /table % }\u003C/p>\n\u003Ch2 id=\"more-non-fiction\">More Non-Fiction\u003C/h2>\n\u003Ch2 id=\"-table--2\">{% table %}\u003C/h2>\n\u003Cul>\n\u003Cli>Big Magic\u003C/li>\n\u003Cli>The Anxious Generation\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Digital Minimalism\u003C/li>\n\u003Cli>100 Essays to Change The Way You Think\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>The Creative Habit\u003C/li>\n\u003Cli>Algorithms to Live By\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>My Morning Routine\u003C/li>\n\u003Cli>Drink?: The New Science of Alcohol and Your Health\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cp>{% /table %}\u003C/p>\n\u003Ch2 id=\"fiction\">Fiction\u003C/h2>\n\u003Ch2 id=\"-table--3\">{% table %}\u003C/h2>\n\u003Cul>\n\u003Cli>The Fountainhead\n{% /table %}\u003C/li>\n\u003C/ul>",{"headings":49,"localImagePaths":69,"remoteImagePaths":70,"frontmatter":71,"imagePaths":74},[50,53,54,57,59,62,64,67],{"depth":27,"slug":51,"text":52},"life-changing","Life Changing",{"depth":27,"slug":28,"text":29},{"depth":27,"slug":55,"text":56},"on-software","On Software",{"depth":27,"slug":58,"text":29},"-table--1",{"depth":27,"slug":60,"text":61},"more-non-fiction","More Non-Fiction",{"depth":27,"slug":63,"text":29},"-table--2",{"depth":27,"slug":65,"text":66},"fiction","Fiction",{"depth":27,"slug":68,"text":29},"-table--3",[],[],{"title":40,"date":72,"external":16,"hide":73,"minutesRead":35},["Date","2016-05-14T15:33:31.000Z"],[18],[],"articles",{"id":75,"data":77,"body":80,"filePath":81,"digest":82,"rendered":83},{"title":40,"date":78,"external":16,"hide":79},["Date","2016-05-14T15:33:31.000Z"],[18],"## Coming Sooooon","content/favs/articles.md","35acdba445894f71",{"html":84,"metadata":85},"\u003Ch2 id=\"coming-sooooon\">Coming Sooooon\u003C/h2>",{"headings":86,"localImagePaths":90,"remoteImagePaths":91,"frontmatter":92,"imagePaths":95},[87],{"depth":27,"slug":88,"text":89},"coming-sooooon","Coming Sooooon",[],[],{"title":40,"date":93,"external":16,"hide":94,"minutesRead":35},["Date","2016-05-14T15:33:31.000Z"],[18],[],"podcasts",{"id":96,"data":98,"body":102,"filePath":103,"digest":104,"rendered":105},{"title":99,"date":100,"external":16,"hide":101},"Fav Podcasts and Episodes",["Date","2016-05-14T15:33:31.000Z"],[18],"ℹ️ _Work in progress: I'll be updating with links/images soon(?)_\n\n\n## Always Recommend\n\n{% table %}\n---\n- [The IT Guy Vs. The Con Artist](https://www.npr.org/2019/08/07/749135286/episode-931-the-it-guy-vs-the-con-artist)\n---\n- Darknet Diaries - guy who made $20s\n- Darknet Diaries - the pirate bay\n---\n- Planet money episode on guy who took down scammer\n- [How to Launder $600M on the Internet](https://www.npr.org/2023/09/15/1197954055/axie-infinity-north-korea-roni)\n---\n{% /table %}","content/favs/podcasts.md","895dca97028dec54",{"html":106,"metadata":107},"\u003Cp>ℹ️ \u003Cem>Work in progress: I’ll be updating with links/images soon(?)\u003C/em>\u003C/p>\n\u003Ch2 id=\"always-recommend\">Always Recommend\u003C/h2>\n\u003Ch2 id=\"-table\">{% table %}\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.npr.org/2019/08/07/749135286/episode-931-the-it-guy-vs-the-con-artist\">The IT Guy Vs. The Con Artist\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Darknet Diaries - guy who made $20s\u003C/li>\n\u003Cli>Darknet Diaries - the pirate bay\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Planet money episode on guy who took down scammer\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.npr.org/2023/09/15/1197954055/axie-infinity-north-korea-roni\">How to Launder $600M on the Internet\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cp>{% /table %}\u003C/p>",{"headings":108,"localImagePaths":113,"remoteImagePaths":114,"frontmatter":115,"imagePaths":118},[109,112],{"depth":27,"slug":110,"text":111},"always-recommend","Always Recommend",{"depth":27,"slug":28,"text":29},[],[],{"title":99,"date":116,"external":16,"hide":117,"minutesRead":35},["Date","2016-05-14T15:33:31.000Z"],[18],[],"posts",["Map",121,122,154,155,179,180,211,212,235,236,256,257,284,285,313,314,335,336,355,356,399,400,434,435,464,465,506,507,538,539,571,572,596,597,614,615],"best-sht-of-2018",{"id":121,"data":123,"body":128,"filePath":129,"digest":130,"rendered":131},{"title":124,"date":125,"tags":126,"external":16},"Best Sh*t of 2018 🎉",["Date","2018-11-13T13:35:06.000Z"],[127],"best sh*t of","My two favorite articles read I came across in 2018.\n\n### Seven habits of highly effective text editing\n\n[source](https://www.moolenaar.net/habits.html)\n\nWe spend A very large amount of time as developers typing. Unlike traditional writing, we are also constantly jumping around in files and directories, adding removing and factoring. If your set up is not optimized to do this, you could be vastly under performing in your potential.\n\nThere are lots of great articles around text editors and text editing. This is one of the first ones I ever came across that got me thinking about the craft.\n\n### Hiring Religion\n\n[source](https://paulenglish.com/hiring.html)\n\nI care deeply about her industry and how we Treat others in it, from interview into working together. This software industry is about the people who make it, and the ability to work together is crucial to productivity. This article covers how best to build and retain that team from the point where it matters most.\n\n### Best Book: The Pragmatic Programmer\n\nWhile it never really gets very technical, it's a classic book is great for getting you thinking more about programming\nholistically. I found this incredibly motivating as a young programmer.\n\n### Best Online Course Catalogue: Linux Academy (defunct)\n\nDuring my tenure at New York Life Labs, linux academy was my secret weapon.","content/posts/best-sht-of-2018.md","e1490051518c331b",{"html":132,"metadata":133},"\u003Cp>My two favorite articles read I came across in 2018.\u003C/p>\n\u003Ch3 id=\"seven-habits-of-highly-effective-text-editing\">Seven habits of highly effective text editing\u003C/h3>\n\u003Cp>\u003Ca href=\"https://www.moolenaar.net/habits.html\">source\u003C/a>\u003C/p>\n\u003Cp>We spend A very large amount of time as developers typing. Unlike traditional writing, we are also constantly jumping around in files and directories, adding removing and factoring. If your set up is not optimized to do this, you could be vastly under performing in your potential.\u003C/p>\n\u003Cp>There are lots of great articles around text editors and text editing. This is one of the first ones I ever came across that got me thinking about the craft.\u003C/p>\n\u003Ch3 id=\"hiring-religion\">Hiring Religion\u003C/h3>\n\u003Cp>\u003Ca href=\"https://paulenglish.com/hiring.html\">source\u003C/a>\u003C/p>\n\u003Cp>I care deeply about her industry and how we Treat others in it, from interview into working together. This software industry is about the people who make it, and the ability to work together is crucial to productivity. This article covers how best to build and retain that team from the point where it matters most.\u003C/p>\n\u003Ch3 id=\"best-book-the-pragmatic-programmer\">Best Book: The Pragmatic Programmer\u003C/h3>\n\u003Cp>While it never really gets very technical, it’s a classic book is great for getting you thinking more about programming\nholistically. I found this incredibly motivating as a young programmer.\u003C/p>\n\u003Ch3 id=\"best-online-course-catalogue-linux-academy-defunct\">Best Online Course Catalogue: Linux Academy (defunct)\u003C/h3>\n\u003Cp>During my tenure at New York Life Labs, linux academy was my secret weapon.\u003C/p>",{"headings":134,"localImagePaths":148,"remoteImagePaths":149,"frontmatter":150,"imagePaths":153},[135,139,142,145],{"depth":136,"slug":137,"text":138},3,"seven-habits-of-highly-effective-text-editing","Seven habits of highly effective text editing",{"depth":136,"slug":140,"text":141},"hiring-religion","Hiring Religion",{"depth":136,"slug":143,"text":144},"best-book-the-pragmatic-programmer","Best Book: The Pragmatic Programmer",{"depth":136,"slug":146,"text":147},"best-online-course-catalogue-linux-academy-defunct","Best Online Course Catalogue: Linux Academy (defunct)",[],[],{"title":124,"date":151,"tags":152,"external":16,"minutesRead":35},["Date","2018-11-13T13:35:06.000Z"],[127],[],"best-sht-of-2019",{"id":154,"data":156,"body":160,"filePath":161,"digest":162,"rendered":163},{"title":157,"date":158,"tags":159,"external":16},"Best Sh*t of 2019 🎊",["Date","2019-12-10T13:35:06.000Z"],[127],"### Pager Duty's Social Engineering Slides\n\n[source](https://sudo.pagerduty.com/for_everyone/#social-engineering)\n\nAdmittedly, there's probably a lot of other great sh*t out there, but I did not do too much exploring this year. Nonetheless, this presentation is great to view on the important topic of social engineering. Beyond that, it's a fantastic example of a presentation that tells you just enough to be affective while being digestible to a wide audience of both technical and non-technical folks.\n\n### Best Book: Effective Python\n\nDue to a change in job, 2019 was the year I went from being a JavaScript programmer to a python programmer.\nWhile headfirst Python Did an amazing job with getting me up to speed on python (seriously check it out), effective python gave me a cornucopia of design patterns that are effective in so many production-level situations. Finally,\nI understood that \"Pythonic\" has some practical meaning and isn't just something python devs throw around to be\ndifferent.","content/posts/best-sht-of-2019.md","cbaed3a421a1f25d",{"html":164,"metadata":165},"\u003Ch3 id=\"pager-dutys-social-engineering-slides\">Pager Duty’s Social Engineering Slides\u003C/h3>\n\u003Cp>\u003Ca href=\"https://sudo.pagerduty.com/for_everyone/#social-engineering\">source\u003C/a>\u003C/p>\n\u003Cp>Admittedly, there’s probably a lot of other great sh*t out there, but I did not do too much exploring this year. Nonetheless, this presentation is great to view on the important topic of social engineering. Beyond that, it’s a fantastic example of a presentation that tells you just enough to be affective while being digestible to a wide audience of both technical and non-technical folks.\u003C/p>\n\u003Ch3 id=\"best-book-effective-python\">Best Book: Effective Python\u003C/h3>\n\u003Cp>Due to a change in job, 2019 was the year I went from being a JavaScript programmer to a python programmer.\nWhile headfirst Python Did an amazing job with getting me up to speed on python (seriously check it out), effective python gave me a cornucopia of design patterns that are effective in so many production-level situations. Finally,\nI understood that “Pythonic” has some practical meaning and isn’t just something python devs throw around to be\ndifferent.\u003C/p>",{"headings":166,"localImagePaths":173,"remoteImagePaths":174,"frontmatter":175,"imagePaths":178},[167,170],{"depth":136,"slug":168,"text":169},"pager-dutys-social-engineering-slides","Pager Duty’s Social Engineering Slides",{"depth":136,"slug":171,"text":172},"best-book-effective-python","Best Book: Effective Python",[],[],{"title":157,"date":176,"tags":177,"external":16,"minutesRead":35},["Date","2019-12-10T13:35:06.000Z"],[127],[],"best-sht-of-2020",{"id":179,"data":181,"body":185,"filePath":186,"digest":187,"rendered":188},{"title":182,"date":183,"tags":184,"external":16},"Best Sh*t of 2020",["Date","2020-12-10T13:35:06.000Z"],[127],"My annual Drop of the best articles and other interesting things I've found on the internets in 2020. Mostly Developer focused.\n\n_Note: These are not necessarily things published in 2020, but the things I've discovered._\n\n## Best Articles\n\n- **[Deploys at Slack](https://slack.engineering/deploys-at-slack/)** \n- **[The first two lines of your bash shell Should Be](https://ashishb.net/all/the-first-two-statements-of-your-bash-script-should-be/)** - Or, unofficial Bash \"strict mode.\" Saves you from common shell headaches.\n- **User Engagement is Code for Addiction** - This article unfortunately was [taken down by Medium](/organizing-knowledge/#but-im-stil-in-control) (presumably because they employ this kind of addiction on their\nown platform)\n- **[How to Make Your Code Reviewer Fall In Love With You](https://mtlynch.io/code-review-love/)** - We all want\nour code review lives to be easier.\n- **[The Two Minute Rule](https://hoanhan.co/posts/2-minute-rule/)** - If you need an easy way to motivate yourself.\n- **[I Push Therefore I am: 2 Days at Etsy](http://mhawthorne.net/posts/2013-etsy-netflix-I-push-therefore-I-am/)** - it's fascinating to me that Netflx and Etsy once had a \"developer exchange program\" (seriously how did HR and compliance work?), so a story around that experience is pretty neat to see documented.\n- **[Self Directed Learning](https://www.jjude.com/sdl/)** - A comprehensive framework to learning how to learn.\n\n## Best Sites\n\n- **[https://wizardzines.com/](https://wizardzines.com)** Julia Evans has the coolest style, combining comic book structures with\nhighly insightful technical instruction (especially around linux). A dream resource for any visual learner.\n\n## Best Online Course\n\n- **[The Missing Semester of your CS Education](https://missing.csail.mit.edu/)** - While geared towards undergrads\nwho are _about_ to go into the professional world, this course is an amazing survey of how we can best code professionally, and I recommend it to every one. Even if you've been in the field for a few years, chances are\nthere's at least one new thing you'll learn from this course, probably more.\n\n## Best random highlight:\n\n> When you’re on a complex task, keep your brain at the top of its game: dump all important stuff on paper. Our brains’ working memory easily overflows with facts and ideas.","content/posts/best-sht-of-2020.md","4a0f8d0c92149d5c",{"html":189,"metadata":190},"\u003Cp>My annual Drop of the best articles and other interesting things I’ve found on the internets in 2020. Mostly Developer focused.\u003C/p>\n\u003Cp>\u003Cem>Note: These are not necessarily things published in 2020, but the things I’ve discovered.\u003C/em>\u003C/p>\n\u003Ch2 id=\"best-articles\">Best Articles\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://slack.engineering/deploys-at-slack/\">Deploys at Slack\u003C/a>\u003C/strong>\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://ashishb.net/all/the-first-two-statements-of-your-bash-script-should-be/\">The first two lines of your bash shell Should Be\u003C/a>\u003C/strong> - Or, unofficial Bash “strict mode.” Saves you from common shell headaches.\u003C/li>\n\u003Cli>\u003Cstrong>User Engagement is Code for Addiction\u003C/strong> - This article unfortunately was \u003Ca href=\"/organizing-knowledge/#but-im-stil-in-control\">taken down by Medium\u003C/a> (presumably because they employ this kind of addiction on their\nown platform)\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://mtlynch.io/code-review-love/\">How to Make Your Code Reviewer Fall In Love With You\u003C/a>\u003C/strong> - We all want\nour code review lives to be easier.\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://hoanhan.co/posts/2-minute-rule/\">The Two Minute Rule\u003C/a>\u003C/strong> - If you need an easy way to motivate yourself.\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"http://mhawthorne.net/posts/2013-etsy-netflix-I-push-therefore-I-am/\">I Push Therefore I am: 2 Days at Etsy\u003C/a>\u003C/strong> - it’s fascinating to me that Netflx and Etsy once had a “developer exchange program” (seriously how did HR and compliance work?), so a story around that experience is pretty neat to see documented.\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://www.jjude.com/sdl/\">Self Directed Learning\u003C/a>\u003C/strong> - A comprehensive framework to learning how to learn.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-sites\">Best Sites\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://wizardzines.com\">https://wizardzines.com/\u003C/a>\u003C/strong> Julia Evans has the coolest style, combining comic book structures with\nhighly insightful technical instruction (especially around linux). A dream resource for any visual learner.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-online-course\">Best Online Course\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://missing.csail.mit.edu/\">The Missing Semester of your CS Education\u003C/a>\u003C/strong> - While geared towards undergrads\nwho are \u003Cem>about\u003C/em> to go into the professional world, this course is an amazing survey of how we can best code professionally, and I recommend it to every one. Even if you’ve been in the field for a few years, chances are\nthere’s at least one new thing you’ll learn from this course, probably more.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-random-highlight\">Best random highlight:\u003C/h2>\n\u003Cblockquote>\n\u003Cp>When you’re on a complex task, keep your brain at the top of its game: dump all important stuff on paper. Our brains’ working memory easily overflows with facts and ideas.\u003C/p>\n\u003C/blockquote>",{"headings":191,"localImagePaths":204,"remoteImagePaths":205,"frontmatter":206,"imagePaths":210},[192,195,198,201],{"depth":27,"slug":193,"text":194},"best-articles","Best Articles",{"depth":27,"slug":196,"text":197},"best-sites","Best Sites",{"depth":27,"slug":199,"text":200},"best-online-course","Best Online Course",{"depth":27,"slug":202,"text":203},"best-random-highlight","Best random highlight:",[],[],{"title":182,"date":207,"tags":208,"external":16,"minutesRead":209},["Date","2020-12-10T13:35:06.000Z"],[127],"2 min read",[],"best-sht-of-2021",{"id":211,"data":213,"body":217,"filePath":218,"digest":219,"rendered":220},{"title":214,"date":215,"tags":216,"external":16},"Best Sh*t of 2021 🪩",["Date","2021-01-10T13:35:06.000Z"],[127],"My annual Drop of the best articles and other interesting things I've found on the internets in 2021. Mostly Developer focused.\n\n_Note: These are not necessarily things published in 2021, but the things I've discovered._\n\n## Best Articles\n- **[Programming is Hard](https://dorinlazar.ro/2021-02-programming-is-hard/)** - Great writing on the misconception\nthat \"anyone\" can learn to code (much better said than [my own writing on the matter](/post/please-maybe-learn-to-code/)). I continue to recommend everyone thinking about learning to code take stock of the rewards as well as the challenges it involves.\n- **[The XY Problem](https://xyproblem.info/)** - We spend lots of time as developers asking for help. Learning the best way makes your life (and your team's) so much better and brighter.\n- **[The Joel Test: 12 Steps to Better Code](https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/)** - Simple 12 yes/no questions every new team/management should ask\nthemselves when setting up a project. Also contains a few nuggets of interesting coding history.\n\n## Best Workflow Improvements\n- I learned VSCode, and started mapping out many of my own keyboard shortcuts. No articles about this (yet), sorry!\n\n## Best Online Course\n\n- Nothing turned up this year, so check out the best sh*t from [earlier](/best-sht-of-2020#best-online-course)","content/posts/best-sht-of-2021.md","23d13cf3a7593b24",{"html":221,"metadata":222},"\u003Cp>My annual Drop of the best articles and other interesting things I’ve found on the internets in 2021. Mostly Developer focused.\u003C/p>\n\u003Cp>\u003Cem>Note: These are not necessarily things published in 2021, but the things I’ve discovered.\u003C/em>\u003C/p>\n\u003Ch2 id=\"best-articles\">Best Articles\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://dorinlazar.ro/2021-02-programming-is-hard/\">Programming is Hard\u003C/a>\u003C/strong> - Great writing on the misconception\nthat “anyone” can learn to code (much better said than \u003Ca href=\"/post/please-maybe-learn-to-code/\">my own writing on the matter\u003C/a>). I continue to recommend everyone thinking about learning to code take stock of the rewards as well as the challenges it involves.\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://xyproblem.info/\">The XY Problem\u003C/a>\u003C/strong> - We spend lots of time as developers asking for help. Learning the best way makes your life (and your team’s) so much better and brighter.\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/\">The Joel Test: 12 Steps to Better Code\u003C/a>\u003C/strong> - Simple 12 yes/no questions every new team/management should ask\nthemselves when setting up a project. Also contains a few nuggets of interesting coding history.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-workflow-improvements\">Best Workflow Improvements\u003C/h2>\n\u003Cul>\n\u003Cli>I learned VSCode, and started mapping out many of my own keyboard shortcuts. No articles about this (yet), sorry!\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-online-course\">Best Online Course\u003C/h2>\n\u003Cul>\n\u003Cli>Nothing turned up this year, so check out the best sh*t from \u003Ca href=\"/best-sht-of-2020#best-online-course\">earlier\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":223,"localImagePaths":229,"remoteImagePaths":230,"frontmatter":231,"imagePaths":234},[224,225,228],{"depth":27,"slug":193,"text":194},{"depth":27,"slug":226,"text":227},"best-workflow-improvements","Best Workflow Improvements",{"depth":27,"slug":199,"text":200},[],[],{"title":214,"date":232,"tags":233,"external":16,"minutesRead":35},["Date","2021-01-10T13:35:06.000Z"],[127],[],"ai-documentation-slop",{"id":235,"data":237,"body":241,"filePath":242,"digest":243,"rendered":244},{"title":238,"date":239,"external":16,"draft":240},"AI Documentation Slop",["Date","2025-09-03T00:00:00.000Z"],true,"Microsoft just open sourced some \"historically significant\" code at https://github.com/microsoft/BASIC-M6502\n\nThis is pretty cool. I was interested in this repo and started going through the README.md, but my eyes very quickly glazed over--the document was cleary AI Slop.\n\n## Keep AI out of Documentation\n\nI think many of us are experimenting with AI and seeing where can and can't be used, as well as where it should (and shouldn't).\n\nThis is starting to create a weird world where\n\nAI - we are 1 hop further from reality--that physical world we are supposed to feel connected to.","content/posts/ai-documentation-slop.md","8777bf81d36dbbcd",{"html":245,"metadata":246},"\u003Cp>Microsoft just open sourced some “historically significant” code at \u003Ca href=\"https://github.com/microsoft/BASIC-M6502\">https://github.com/microsoft/BASIC-M6502\u003C/a>\u003C/p>\n\u003Cp>This is pretty cool. I was interested in this repo and started going through the README.md, but my eyes very quickly glazed over—the document was cleary AI Slop.\u003C/p>\n\u003Ch2 id=\"keep-ai-out-of-documentation\">Keep AI out of Documentation\u003C/h2>\n\u003Cp>I think many of us are experimenting with AI and seeing where can and can’t be used, as well as where it should (and shouldn’t).\u003C/p>\n\u003Cp>This is starting to create a weird world where\u003C/p>\n\u003Cp>AI - we are 1 hop further from reality—that physical world we are supposed to feel connected to.\u003C/p>",{"headings":247,"localImagePaths":251,"remoteImagePaths":252,"frontmatter":253,"imagePaths":255},[248],{"depth":27,"slug":249,"text":250},"keep-ai-out-of-documentation","Keep AI out of Documentation",[],[],{"title":238,"date":254,"external":16,"draft":240,"minutesRead":35},["Date","2025-09-03T00:00:00.000Z"],[],"best-sht-of-2022",{"id":256,"data":258,"body":262,"filePath":263,"digest":264,"rendered":265},{"title":259,"date":260,"tags":261,"external":16},"Best Sh*t of 2022 🥳",["Date","2022-12-28T11:22:10.000Z"],[127],"My annual Drop of the best articles and other interesting things I've found on the internets in 2022. Mostly Developer focused.\n\n> Note: These are not necessarily things _published_ in 2022, but the things I've discovered.\n\n## Best Articles\n- **If you only read one:** **[The Elements of git](https://cuddly-octo-palm-tree.com/posts/2021-09-19-git-elements/)**\n  - _Runner up_: [Learn the inner workings of git, not just the commands](https://developer.ibm.com/tutorials/d-learn-workings-git/)\n- [Building A JavaScript Bundler](https://cpojer.net/posts/building-a-javascript-bundler)\n- [How To Ask Questions The Smart Way](http://www.catb.org/~esr/faqs/smart-questions.html)\n- [Git commands explained with Cats](https://girliemac.com/blog/2017/12/26/git-purr/)\n- [Effective Code Browsing](https://noahan.me/posts/effective-code-browsing-part1/)\n- [Reflections on 10,000 hrs of programming](https://matt-rickard.com/reflections-on-10-000-hours-of-programming)\n\n## Best Workflow Improvements\n- Setting git diff to diff3 (thanks to this [post](https://blog.nilbus.com/take-the-pain-out-of-git-conflict-resolution-use-diff3/))\n\n## Best Tool added to my Dev Toolbox\n\n- [jscodeshift](https://github.com/facebook/jscodeshift) and [astexplorer.net](https://astexplorer.net/). Powerful stuff.\n\n## Best Online Course\n\n- [Everyday Typescript (executeprogram)](https://www.executeprogram.com/courses/everyday-typescript) (paid) - one of the best\nonline courses I've _ever_ taken. Completely demystified TypeScript, especially around the _why_ and _how to resolve_ of type errors.\n\n## Other cool sh*t\n\n- [FreeTube](https://freetubeapp.io/) is a private YouTube desktop client (I love the idea of having\na dedicated client outside my browser tabs for YouTube in general)","content/posts/best-sht-of-2022.md","151cdeafc171fcc7",{"html":266,"metadata":267},"\u003Cp>My annual Drop of the best articles and other interesting things I’ve found on the internets in 2022. Mostly Developer focused.\u003C/p>\n\u003Cblockquote>\n\u003Cp>Note: These are not necessarily things \u003Cem>published\u003C/em> in 2022, but the things I’ve discovered.\u003C/p>\n\u003C/blockquote>\n\u003Ch2 id=\"best-articles\">Best Articles\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>If you only read one:\u003C/strong> \u003Cstrong>\u003Ca href=\"https://cuddly-octo-palm-tree.com/posts/2021-09-19-git-elements/\">The Elements of git\u003C/a>\u003C/strong>\n\u003Cul>\n\u003Cli>\u003Cem>Runner up\u003C/em>: \u003Ca href=\"https://developer.ibm.com/tutorials/d-learn-workings-git/\">Learn the inner workings of git, not just the commands\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"https://cpojer.net/posts/building-a-javascript-bundler\">Building A JavaScript Bundler\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"http://www.catb.org/~esr/faqs/smart-questions.html\">How To Ask Questions The Smart Way\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://girliemac.com/blog/2017/12/26/git-purr/\">Git commands explained with Cats\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://noahan.me/posts/effective-code-browsing-part1/\">Effective Code Browsing\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://matt-rickard.com/reflections-on-10-000-hours-of-programming\">Reflections on 10,000 hrs of programming\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-workflow-improvements\">Best Workflow Improvements\u003C/h2>\n\u003Cul>\n\u003Cli>Setting git diff to diff3 (thanks to this \u003Ca href=\"https://blog.nilbus.com/take-the-pain-out-of-git-conflict-resolution-use-diff3/\">post\u003C/a>)\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-tool-added-to-my-dev-toolbox\">Best Tool added to my Dev Toolbox\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://github.com/facebook/jscodeshift\">jscodeshift\u003C/a> and \u003Ca href=\"https://astexplorer.net/\">astexplorer.net\u003C/a>. Powerful stuff.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-online-course\">Best Online Course\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.executeprogram.com/courses/everyday-typescript\">Everyday Typescript (executeprogram)\u003C/a> (paid) - one of the best\nonline courses I’ve \u003Cem>ever\u003C/em> taken. Completely demystified TypeScript, especially around the \u003Cem>why\u003C/em> and \u003Cem>how to resolve\u003C/em> of type errors.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"other-cool-sht\">Other cool sh*t\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://freetubeapp.io/\">FreeTube\u003C/a> is a private YouTube desktop client (I love the idea of having\na dedicated client outside my browser tabs for YouTube in general)\u003C/li>\n\u003C/ul>",{"headings":268,"localImagePaths":278,"remoteImagePaths":279,"frontmatter":280,"imagePaths":283},[269,270,271,274,275],{"depth":27,"slug":193,"text":194},{"depth":27,"slug":226,"text":227},{"depth":27,"slug":272,"text":273},"best-tool-added-to-my-dev-toolbox","Best Tool added to my Dev Toolbox",{"depth":27,"slug":199,"text":200},{"depth":27,"slug":276,"text":277},"other-cool-sht","Other cool sh*t",[],[],{"title":259,"date":281,"tags":282,"external":16,"minutesRead":35},["Date","2022-12-28T11:22:10.000Z"],[127],[],"best-sht-of-2023",{"id":284,"data":286,"body":290,"filePath":291,"digest":292,"rendered":293},{"title":287,"date":288,"tags":289,"external":16},"Best Sh*t of 2023 🪅",["Date","2023-12-28T11:22:10.000Z"],[127],"My annual Drop of the best articles and other interesting things I've found on the internets in 2022. Mostly Developer focused.\n\n_Note: These are not necessarily things published in 2023, but the things I've discovered._\n\n## Best Articles\n\n- [A Career Ending Mistake](https://bitfieldconsulting.com/golang/career) - (Not what it sounds like) the importance of consciously\ndeciding what career you want to end up in, and how to get there... while you still have time.\n- [Numbers To Know For Managing (Software Teams)](https://web.archive.org/web/20230322100209/https://staysaasy.com/management/2023/03/20/numbers-to-manage-by.html) love it\n- [Testing a new encrypted messaging app's extraordinary claims](https://web.archive.org/web/20230511084005/https://crnkovic.dev/testing-converso/) A really fascinating tale of reverse engineering. The Author walks through fairly trivial ways\nyou can find out about an app from its source code. Tl;dr: you can learn a lot from the domain names code calls out to!\n\n\n## Best Podcast Episode\n\n- [How to launder $600 million on the internet](https://www.npr.org/2023/09/15/1197954055/axie-infinity-north-korea-ronin) - I'm notoriously not into\ntrue crime. But cyber crime? Fascinating! This podcast episode interviews the investigator tasked with recovering $600 Million in stolen crypto.\n\n## Best Tool added to my Dev Toolbox\n\n- ???\n\n### Honorable mentions\n\n- [Hugo](gohugo.io)\n- [getform](https://getform.io/)\n\n## Best Online Course\n\n- ???\n\n## Other cool sh*t\n\n- [Kagi Search](https://kagi.com) - Paid search engine that's blazingly fast with no ads.\nI'm super excited to see this alternative revenue being tested. Kagi will be one of the first case studies\nfor an internet beyond Surveillance Capitalism.","content/posts/best-sht-of-2023.md","b5eaec7f8ead7d5a",{"html":294,"metadata":295},"\u003Cp>My annual Drop of the best articles and other interesting things I’ve found on the internets in 2022. Mostly Developer focused.\u003C/p>\n\u003Cp>\u003Cem>Note: These are not necessarily things published in 2023, but the things I’ve discovered.\u003C/em>\u003C/p>\n\u003Ch2 id=\"best-articles\">Best Articles\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://bitfieldconsulting.com/golang/career\">A Career Ending Mistake\u003C/a> - (Not what it sounds like) the importance of consciously\ndeciding what career you want to end up in, and how to get there… while you still have time.\u003C/li>\n\u003Cli>\u003Ca href=\"https://web.archive.org/web/20230322100209/https://staysaasy.com/management/2023/03/20/numbers-to-manage-by.html\">Numbers To Know For Managing (Software Teams)\u003C/a> love it\u003C/li>\n\u003Cli>\u003Ca href=\"https://web.archive.org/web/20230511084005/https://crnkovic.dev/testing-converso/\">Testing a new encrypted messaging app’s extraordinary claims\u003C/a> A really fascinating tale of reverse engineering. The Author walks through fairly trivial ways\nyou can find out about an app from its source code. Tl;dr: you can learn a lot from the domain names code calls out to!\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-podcast-episode\">Best Podcast Episode\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.npr.org/2023/09/15/1197954055/axie-infinity-north-korea-ronin\">How to launder $600 million on the internet\u003C/a> - I’m notoriously not into\ntrue crime. But cyber crime? Fascinating! This podcast episode interviews the investigator tasked with recovering $600 Million in stolen crypto.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-tool-added-to-my-dev-toolbox\">Best Tool added to my Dev Toolbox\u003C/h2>\n\u003Cul>\n\u003Cli>???\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"honorable-mentions\">Honorable mentions\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"gohugo.io\">Hugo\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://getform.io/\">getform\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"best-online-course\">Best Online Course\u003C/h2>\n\u003Cul>\n\u003Cli>???\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"other-cool-sht\">Other cool sh*t\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://kagi.com\">Kagi Search\u003C/a> - Paid search engine that’s blazingly fast with no ads.\nI’m super excited to see this alternative revenue being tested. Kagi will be one of the first case studies\nfor an internet beyond Surveillance Capitalism.\u003C/li>\n\u003C/ul>",{"headings":296,"localImagePaths":307,"remoteImagePaths":308,"frontmatter":309,"imagePaths":312},[297,298,301,302,305,306],{"depth":27,"slug":193,"text":194},{"depth":27,"slug":299,"text":300},"best-podcast-episode","Best Podcast Episode",{"depth":27,"slug":272,"text":273},{"depth":136,"slug":303,"text":304},"honorable-mentions","Honorable mentions",{"depth":27,"slug":199,"text":200},{"depth":27,"slug":276,"text":277},[],[],{"title":287,"date":310,"tags":311,"external":16,"minutesRead":209},["Date","2023-12-28T11:22:10.000Z"],[127],[],"breaking-bad-news",{"id":313,"data":315,"body":322,"filePath":323,"digest":324,"rendered":325},{"title":316,"date":317,"tags":318,"external":16},"Breaking The Bad News",["Date","2023-02-18T11:38:09.000Z"],[319,320,321],"reflection","quick read","personal development","There's a lot of lessons in tech translate into life lessons in general. One of the best one I've learned is\nbreaking the bad news.\n\n> Breaking the Bad News, aka Front-loading the Pain, is a critical skill to hone if you want to be successful\nin tech (or in life). Learn to tolerate it.\n\nWhen I was younger in the tech industry, I always feared missing a deadline or an estimate, so much that I wouldn't\nmention falling behind until there was no way to recover. I always believed (from a mixture of optimism and naiveness)\nthat I would be able to catch-up. Sometimes that was true, other times it led me to overwork, and it always led me to\nover-worry.\n\nIn life, you may have to call a creditor to explain you can't make your bills this month, or have serious conversations\nwith a friend or partner. All of these are some forms of bad news.\n\nIn all the situations however, Breaking the Bad News is hardly bad. Managers will appreciate an honest update on projects,\ncreditors will work with you to pay off bills. The earlier you break bad news, the better it is.\n\nBut the outcome is good in a far more personal way. Whenever I break bad news I'm always amazed at how the reactions\naren't even close to the bad scenarios I was expecting. To quote good ole Seneca, \"We suffer more by imagination than by reality.\"","content/posts/breaking-bad-news.md","c4e889da495ce385",{"html":326,"metadata":327},"\u003Cp>There’s a lot of lessons in tech translate into life lessons in general. One of the best one I’ve learned is\nbreaking the bad news.\u003C/p>\n\u003Cblockquote>\n\u003Cp>Breaking the Bad News, aka Front-loading the Pain, is a critical skill to hone if you want to be successful\nin tech (or in life). Learn to tolerate it.\u003C/p>\n\u003C/blockquote>\n\u003Cp>When I was younger in the tech industry, I always feared missing a deadline or an estimate, so much that I wouldn’t\nmention falling behind until there was no way to recover. I always believed (from a mixture of optimism and naiveness)\nthat I would be able to catch-up. Sometimes that was true, other times it led me to overwork, and it always led me to\nover-worry.\u003C/p>\n\u003Cp>In life, you may have to call a creditor to explain you can’t make your bills this month, or have serious conversations\nwith a friend or partner. All of these are some forms of bad news.\u003C/p>\n\u003Cp>In all the situations however, Breaking the Bad News is hardly bad. Managers will appreciate an honest update on projects,\ncreditors will work with you to pay off bills. The earlier you break bad news, the better it is.\u003C/p>\n\u003Cp>But the outcome is good in a far more personal way. Whenever I break bad news I’m always amazed at how the reactions\naren’t even close to the bad scenarios I was expecting. To quote good ole Seneca, “We suffer more by imagination than by reality.”\u003C/p>",{"headings":328,"localImagePaths":329,"remoteImagePaths":330,"frontmatter":331,"imagePaths":334},[],[],[],{"title":316,"date":332,"tags":333,"external":16,"minutesRead":209},["Date","2023-02-18T11:38:09.000Z"],[319,320,321],[],"do-it-now",{"id":335,"data":337,"body":342,"filePath":343,"digest":344,"rendered":345},{"title":338,"date":339,"tags":340,"external":16},"Do It Now",["Date","2025-04-26T14:40:03.000Z"],[341],"life reflections","Following the death of Pope Francis, a quote unofficially attributed to him was read on the [Pivot](https://podcasts.voxmedia.com/show/pivot) podcast. I loved it, so I'm posting it here in full (Emphasis mine)\n\n> The walls of hospitals have heard more honest prayers than churches…\nThey have witnessed far more sincere kisses than those in airports…\nIt is in hospitals that you see a homophobe being saved by a gay doctor.\nA privileged doctor saving the life of a beggar…\nIn intensive care, you see a Jew taking care of a racist…\nA police officer and a prisoner in the same room receiving the same care…\nA wealthy patient waiting for a liver transplant, ready to receive the organ from a poor donor…\n>\n> It is in these moments, when the hospital touches the wounds of people, that different worlds intersect according to a divine design. And in this communion of destinies, we realize that alone, we are nothing.\n>\n> The absolute truth of people, most of the time, only reveals itself in moments of pain or in the real threat of an irreversible loss.\n>\n> A hospital is a place where human beings remove their masks and show themselves as they truly are, in their purest essence.\n>\n> **This life will pass quickly, so do not waste it fighting with people.**\n> Do not criticize your body too much.\n> Do not complain excessively.\n> Do not lose sleep over bills.\n> Make sure to hug your loved ones.\n> Do not worry too much about keeping the house spotless.\n> Material goods must be earned by each person-—do not dedicate yourself to accumulating an inheritance…\n>\n> **You are waiting for too much:** Christmas; Friday; next year; when you have money; when love arrives; when everything is perfect...\n>\n> Listen, perfection does not exist.\n> A human being cannot attain it because we are simply not made to be fulfilled here.\n> Here, we are given an opportunity to learn.\n>\n> So, make the most of this trial of life—and **do it now.**\n>\n> Respect yourself, respect others. Walk your own path, and let go of the path others have chosen for you.\nRespect: do not comment, do not judge, do not interfere.\n>\n> **Love more, forgive more, embrace more, live more intensely!**\n> And leave the rest in the hands of the Creator.","content/posts/do-it-now.md","c8c2a9e8e8713485",{"html":346,"metadata":347},"\u003Cp>Following the death of Pope Francis, a quote unofficially attributed to him was read on the \u003Ca href=\"https://podcasts.voxmedia.com/show/pivot\">Pivot\u003C/a> podcast. I loved it, so I’m posting it here in full (Emphasis mine)\u003C/p>\n\u003Cblockquote>\n\u003Cp>The walls of hospitals have heard more honest prayers than churches…\nThey have witnessed far more sincere kisses than those in airports…\nIt is in hospitals that you see a homophobe being saved by a gay doctor.\nA privileged doctor saving the life of a beggar…\nIn intensive care, you see a Jew taking care of a racist…\nA police officer and a prisoner in the same room receiving the same care…\nA wealthy patient waiting for a liver transplant, ready to receive the organ from a poor donor…\u003C/p>\n\u003Cp>It is in these moments, when the hospital touches the wounds of people, that different worlds intersect according to a divine design. And in this communion of destinies, we realize that alone, we are nothing.\u003C/p>\n\u003Cp>The absolute truth of people, most of the time, only reveals itself in moments of pain or in the real threat of an irreversible loss.\u003C/p>\n\u003Cp>A hospital is a place where human beings remove their masks and show themselves as they truly are, in their purest essence.\u003C/p>\n\u003Cp>\u003Cstrong>This life will pass quickly, so do not waste it fighting with people.\u003C/strong>\nDo not criticize your body too much.\nDo not complain excessively.\nDo not lose sleep over bills.\nMake sure to hug your loved ones.\nDo not worry too much about keeping the house spotless.\nMaterial goods must be earned by each person-—do not dedicate yourself to accumulating an inheritance…\u003C/p>\n\u003Cp>\u003Cstrong>You are waiting for too much:\u003C/strong> Christmas; Friday; next year; when you have money; when love arrives; when everything is perfect…\u003C/p>\n\u003Cp>Listen, perfection does not exist.\nA human being cannot attain it because we are simply not made to be fulfilled here.\nHere, we are given an opportunity to learn.\u003C/p>\n\u003Cp>So, make the most of this trial of life—and \u003Cstrong>do it now.\u003C/strong>\u003C/p>\n\u003Cp>Respect yourself, respect others. Walk your own path, and let go of the path others have chosen for you.\nRespect: do not comment, do not judge, do not interfere.\u003C/p>\n\u003Cp>\u003Cstrong>Love more, forgive more, embrace more, live more intensely!\u003C/strong>\nAnd leave the rest in the hands of the Creator.\u003C/p>\n\u003C/blockquote>",{"headings":348,"localImagePaths":349,"remoteImagePaths":350,"frontmatter":351,"imagePaths":354},[],[],[],{"title":338,"date":352,"tags":353,"external":16,"minutesRead":209},["Date","2025-04-26T14:40:03.000Z"],[341],[],"jobs-and-the-deep-life-notes",{"id":355,"data":357,"body":360,"filePath":361,"digest":362,"rendered":363},{"title":358,"date":359,"external":16,"draft":240},"Notes: Jobs and the Deep Life",["Date","2025-01-21T00:00:00.000Z"],"## 4 Paradoxes of Work\n\n### 1. The Passion Paradox\n\n{% table %}\n- Expectation\n- Reality\n---\n- Follow your passion and you'll never work a day in your life.\n- Day-to-Day of pretty much all jobs are pretty similar (spreadsheets, email, coding. Read: mundaine)\n{% /table %}\n\n### #2: Grand Goal Paradox\n\n{% table %}\n- Expectai\n---\n- If you just make it to some large goal (Partner, Principal Engineer), everything will be ok.\n- Pursuit of \"Grand Goals\" trample other important life areas; accomplishment is rewarded with more work/stress\n{% /table %}\n### 3. The Passion Paradox\n\n{% table %}\n- Expectation\n- Reality\n---\n- Follow your passion and you'll never work a day in your life.\n- It probably won't happen (involves both luck and insane amount of skill); money doesn't solve all problems.\n{% /table %}\n\n### 4. Bohemian Paradox\n{% table %}\n- Expectation\n- Reality\n---\n- Work for yourself, piece together short-term work for maximum flexibility and happiness..\n- Overlooks many benefits of W-2 work (health insurance, 401k, scheduled pay), that are very hard to replicate.\n{% /table %}\n\n\n## Job a a Tool\n\nAsses Jobs based on 3 criteria:\n\n1. How much money it generates\n1. How much time it requires\n1. How much flexibility it provides you\n\n## Steps from the above Job\n\n### Fix the number (of money a job generates)\n\nAim for the number. _Don't aim to exceed that number_.\n\nKeep getting skilled (for your job) until you hit your number.\n\n### Exchange additional Income for time or flexibility\n\nOnce you've hit that number, find other ways to","content/posts/jobs-and-the-deep-life-notes.md","d5b37dcab4018e1c",{"html":364,"metadata":365},"\u003Ch2 id=\"4-paradoxes-of-work\">4 Paradoxes of Work\u003C/h2>\n\u003Ch3 id=\"1-the-passion-paradox\">1. The Passion Paradox\u003C/h3>\n\u003Cp>{% table %}\u003C/p>\n\u003Cul>\n\u003Cli>Expectation\u003C/li>\n\u003Cli>Reality\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Follow your passion and you’ll never work a day in your life.\u003C/li>\n\u003Cli>Day-to-Day of pretty much all jobs are pretty similar (spreadsheets, email, coding. Read: mundaine)\n{% /table %}\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"2-grand-goal-paradox\">#2: Grand Goal Paradox\u003C/h3>\n\u003Cp>{% table %}\u003C/p>\n\u003Cul>\n\u003Cli>Expectai\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>If you just make it to some large goal (Partner, Principal Engineer), everything will be ok.\u003C/li>\n\u003Cli>Pursuit of “Grand Goals” trample other important life areas; accomplishment is rewarded with more work/stress\n{% /table %}\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-the-passion-paradox\">3. The Passion Paradox\u003C/h3>\n\u003Cp>{% table %}\u003C/p>\n\u003Cul>\n\u003Cli>Expectation\u003C/li>\n\u003Cli>Reality\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Follow your passion and you’ll never work a day in your life.\u003C/li>\n\u003Cli>It probably won’t happen (involves both luck and insane amount of skill); money doesn’t solve all problems.\n{% /table %}\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"4-bohemian-paradox\">4. Bohemian Paradox\u003C/h3>\n\u003Cp>{% table %}\u003C/p>\n\u003Cul>\n\u003Cli>Expectation\u003C/li>\n\u003Cli>Reality\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Cul>\n\u003Cli>Work for yourself, piece together short-term work for maximum flexibility and happiness..\u003C/li>\n\u003Cli>Overlooks many benefits of W-2 work (health insurance, 401k, scheduled pay), that are very hard to replicate.\n{% /table %}\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"job-a-a-tool\">Job a a Tool\u003C/h2>\n\u003Cp>Asses Jobs based on 3 criteria:\u003C/p>\n\u003Col>\n\u003Cli>How much money it generates\u003C/li>\n\u003Cli>How much time it requires\u003C/li>\n\u003Cli>How much flexibility it provides you\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"steps-from-the-above-job\">Steps from the above Job\u003C/h2>\n\u003Ch3 id=\"fix-the-number-of-money-a-job-generates\">Fix the number (of money a job generates)\u003C/h3>\n\u003Cp>Aim for the number. \u003Cem>Don’t aim to exceed that number\u003C/em>.\u003C/p>\n\u003Cp>Keep getting skilled (for your job) until you hit your number.\u003C/p>\n\u003Ch3 id=\"exchange-additional-income-for-time-or-flexibility\">Exchange additional Income for time or flexibility\u003C/h3>\n\u003Cp>Once you’ve hit that number, find other ways to\u003C/p>",{"headings":366,"localImagePaths":394,"remoteImagePaths":395,"frontmatter":396,"imagePaths":398},[367,370,373,376,379,382,385,388,391],{"depth":27,"slug":368,"text":369},"4-paradoxes-of-work","4 Paradoxes of Work",{"depth":136,"slug":371,"text":372},"1-the-passion-paradox","1. The Passion Paradox",{"depth":136,"slug":374,"text":375},"2-grand-goal-paradox","#2: Grand Goal Paradox",{"depth":136,"slug":377,"text":378},"3-the-passion-paradox","3. The Passion Paradox",{"depth":136,"slug":380,"text":381},"4-bohemian-paradox","4. Bohemian Paradox",{"depth":27,"slug":383,"text":384},"job-a-a-tool","Job a a Tool",{"depth":27,"slug":386,"text":387},"steps-from-the-above-job","Steps from the above Job",{"depth":136,"slug":389,"text":390},"fix-the-number-of-money-a-job-generates","Fix the number (of money a job generates)",{"depth":136,"slug":392,"text":393},"exchange-additional-income-for-time-or-flexibility","Exchange additional Income for time or flexibility",[],[],{"title":358,"date":397,"external":16,"draft":240,"minutesRead":209},["Date","2025-01-21T00:00:00.000Z"],[],"imposter-syndrome",{"id":399,"data":401,"body":409,"filePath":410,"digest":411,"rendered":412},{"title":402,"date":403,"tags":404,"external":16,"aliases":407},"A Proactive Approach to Impostor Syndrome",["Date","2018-01-19T15:01:12.000Z"],[321,405,406],"imposter syndrome","motivation",[408],"/articles/a-proactive-approach-to-imposter-syndrome","We all know about Imposter Syndrome yet the epidemic seems to be growing, especially when breaking into a new career (like those learning to code). No doubt I've felt it in tech and elsewhere in life, as I'm sure you have. While there's plenty of [articles](https://guide.freecodecamp.org/working-in-tech/imposter-syndrome) and [videos](https://www.youtube.com/watch?v=whyUPLJZljE) on how to fight the self-doubt that comes along with Imposter Syndrome, I'd like to offer an alternative approach:\n\n_Use it._\n\nYou can try to fight Impostor Syndrome or change your mindset, and doing so has worked for some people. Not me. Instead, I use Impostor Syndrome as a primary motivation to learn new and difficult skills. For me, the recognition that I am currently uncomfortable and filled with self-doubt drives me to obliterate those feelings by means of mastery. Not only can Impostor Syndrome be a motivator, but it can also be a validator; **I keep on working for as long as it takes until the feeling of Impostor Syndrome isn't there anymore.**\n\n# Impostor Syndrome as a Motivator\n\nIt's well recognized that Impostor Syndrome is not necessarily a bad thing. In many ways, it can signal that you care about the work you are doing. While I try to eliminate it through mastery when experienced, the complete absence of Impostor Syndrome can be a signal that you are probably in the wrong field or focusing on the wrong thing. In these situation, I take a hard an honest look about why I _really_ want to learn something.\n\nConversely, the feeling of Impostor Syndrome is often the first step to in rewarding self-growth. Where there's feelings of doubt in a certain area, there are often feelings of success and gratifications if we stay the course. As a rule, whenever resistance is felt in a certain area, that's exactly the direction you should go in, and turning the obstacle (Impostor Syndrome) into a motivator has been the best way for me to prioritize what I should focus on. If this doesn't happen naturally, you can start by changing mindset. Simply change the way you define Impostor Syndrome, from:\n\n> Obstacle: I feel like an imposter and therefore should not be doing what I am currently doing.\n\nTo:\n\n> Motivation: I feel like an imposter and therefore should _learn more_ about what I am currently doing.\n\nUnderstand that avoiding Imposter Syndrome altogether results in being stuck in your comfort zone. Although you've successfully blocked out self-doubt, you've also blocked out self-growth and self-satisfaction in the process. No good!\n\n# What does \"beating\" imposter syndrome look like?\n\nOne thing I love about the tech industry is the quantifiable skills. When you know something, you can prove your worth again in again. I've beaten my own \"beginner\" Impostor Syndrome by building API's, certifying with Amazon Web Services, architecting infrastructure that remains stable, and receiving positive feedback on all my technical interviews in the past year. The best result is not only do I feel a strong sense of accomplishment, but I'm wildly confident in what I know. This is also known as conscious competence, the final phase of learning, and it feels great! \n\nConfidence should not be mistaken with arrogance, however. I'm also wildly confident about _what I don't know_. I try to be the first to admit I don't understand something--it's easy for me to do now because I am secure enough in my areas of expertise that I can acknowledge when something is beyond it. Furthermore, I view these new things as a way to expand my skills even more!\n\n# Important subtleties to note\n\nThis article is very work-your-ass-off oriented, but it's equally important to take breaks and make sure your work does not consume your entire life (see \"burnout\").\n\nAfter I achieve a huge goal, I always take a--sometimes extended--amount of time for some serious rest-and-recovery. Maybe it's my work-hard-play-hard nature, but I'm a big fan of drilling down three months at a time followed handful more of steady work with days off and lots of Netflix (or hiking) in between. And of course, when preparing for the next round of hard work, I ensure I'm fully recovered and mentally prepared for the new tasks ahead. A war is more than just the battle and you can't always be fighting it; there's lots of preparation and recovery needed to ensure you're at peak performance before the actual charge begins.\n\nI hope you've enjoyed my two cents on Impostor Syndrome. As a post script I'll admit that writing this article made me feel like a bit of... a fraud (so meta!). Guess I'll have to keep learning how to improve my writing until I've beaten Impostor Syndrome once again!","content/posts/imposter-syndrome.md","daeb8f31cc3c8de1",{"html":413,"metadata":414},"\u003Cp>We all know about Imposter Syndrome yet the epidemic seems to be growing, especially when breaking into a new career (like those learning to code). No doubt I’ve felt it in tech and elsewhere in life, as I’m sure you have. While there’s plenty of \u003Ca href=\"https://guide.freecodecamp.org/working-in-tech/imposter-syndrome\">articles\u003C/a> and \u003Ca href=\"https://www.youtube.com/watch?v=whyUPLJZljE\">videos\u003C/a> on how to fight the self-doubt that comes along with Imposter Syndrome, I’d like to offer an alternative approach:\u003C/p>\n\u003Cp>\u003Cem>Use it.\u003C/em>\u003C/p>\n\u003Cp>You can try to fight Impostor Syndrome or change your mindset, and doing so has worked for some people. Not me. Instead, I use Impostor Syndrome as a primary motivation to learn new and difficult skills. For me, the recognition that I am currently uncomfortable and filled with self-doubt drives me to obliterate those feelings by means of mastery. Not only can Impostor Syndrome be a motivator, but it can also be a validator; \u003Cstrong>I keep on working for as long as it takes until the feeling of Impostor Syndrome isn’t there anymore.\u003C/strong>\u003C/p>\n\u003Ch1 id=\"impostor-syndrome-as-a-motivator\">Impostor Syndrome as a Motivator\u003C/h1>\n\u003Cp>It’s well recognized that Impostor Syndrome is not necessarily a bad thing. In many ways, it can signal that you care about the work you are doing. While I try to eliminate it through mastery when experienced, the complete absence of Impostor Syndrome can be a signal that you are probably in the wrong field or focusing on the wrong thing. In these situation, I take a hard an honest look about why I \u003Cem>really\u003C/em> want to learn something.\u003C/p>\n\u003Cp>Conversely, the feeling of Impostor Syndrome is often the first step to in rewarding self-growth. Where there’s feelings of doubt in a certain area, there are often feelings of success and gratifications if we stay the course. As a rule, whenever resistance is felt in a certain area, that’s exactly the direction you should go in, and turning the obstacle (Impostor Syndrome) into a motivator has been the best way for me to prioritize what I should focus on. If this doesn’t happen naturally, you can start by changing mindset. Simply change the way you define Impostor Syndrome, from:\u003C/p>\n\u003Cblockquote>\n\u003Cp>Obstacle: I feel like an imposter and therefore should not be doing what I am currently doing.\u003C/p>\n\u003C/blockquote>\n\u003Cp>To:\u003C/p>\n\u003Cblockquote>\n\u003Cp>Motivation: I feel like an imposter and therefore should \u003Cem>learn more\u003C/em> about what I am currently doing.\u003C/p>\n\u003C/blockquote>\n\u003Cp>Understand that avoiding Imposter Syndrome altogether results in being stuck in your comfort zone. Although you’ve successfully blocked out self-doubt, you’ve also blocked out self-growth and self-satisfaction in the process. No good!\u003C/p>\n\u003Ch1 id=\"what-does-beating-imposter-syndrome-look-like\">What does “beating” imposter syndrome look like?\u003C/h1>\n\u003Cp>One thing I love about the tech industry is the quantifiable skills. When you know something, you can prove your worth again in again. I’ve beaten my own “beginner” Impostor Syndrome by building API’s, certifying with Amazon Web Services, architecting infrastructure that remains stable, and receiving positive feedback on all my technical interviews in the past year. The best result is not only do I feel a strong sense of accomplishment, but I’m wildly confident in what I know. This is also known as conscious competence, the final phase of learning, and it feels great!\u003C/p>\n\u003Cp>Confidence should not be mistaken with arrogance, however. I’m also wildly confident about \u003Cem>what I don’t know\u003C/em>. I try to be the first to admit I don’t understand something—it’s easy for me to do now because I am secure enough in my areas of expertise that I can acknowledge when something is beyond it. Furthermore, I view these new things as a way to expand my skills even more!\u003C/p>\n\u003Ch1 id=\"important-subtleties-to-note\">Important subtleties to note\u003C/h1>\n\u003Cp>This article is very work-your-ass-off oriented, but it’s equally important to take breaks and make sure your work does not consume your entire life (see “burnout”).\u003C/p>\n\u003Cp>After I achieve a huge goal, I always take a—sometimes extended—amount of time for some serious rest-and-recovery. Maybe it’s my work-hard-play-hard nature, but I’m a big fan of drilling down three months at a time followed handful more of steady work with days off and lots of Netflix (or hiking) in between. And of course, when preparing for the next round of hard work, I ensure I’m fully recovered and mentally prepared for the new tasks ahead. A war is more than just the battle and you can’t always be fighting it; there’s lots of preparation and recovery needed to ensure you’re at peak performance before the actual charge begins.\u003C/p>\n\u003Cp>I hope you’ve enjoyed my two cents on Impostor Syndrome. As a post script I’ll admit that writing this article made me feel like a bit of… a fraud (so meta!). Guess I’ll have to keep learning how to improve my writing until I’ve beaten Impostor Syndrome once again!\u003C/p>",{"headings":415,"localImagePaths":426,"remoteImagePaths":427,"frontmatter":428,"imagePaths":433},[416,420,423],{"depth":417,"slug":418,"text":419},1,"impostor-syndrome-as-a-motivator","Impostor Syndrome as a Motivator",{"depth":417,"slug":421,"text":422},"what-does-beating-imposter-syndrome-look-like","What does “beating” imposter syndrome look like?",{"depth":417,"slug":424,"text":425},"important-subtleties-to-note","Important subtleties to note",[],[],{"title":402,"date":429,"tags":430,"aliases":431,"external":16,"minutesRead":432},["Date","2018-01-19T15:01:12.000Z"],[321,405,406],[408],"4 min read",[],"github",{"id":434,"data":436,"body":442,"filePath":443,"digest":444,"rendered":445},{"title":437,"date":438,"tags":439,"external":16},"Yes! Github Activity Matters!",["Date","2021-02-06T14:40:03.000Z"],[440,441,434],"tech-industry","interview-prep","_EDIT 01-23-2025: I've changed the framework I use to build this site from [Hugo](gohugo.com) to [AstroJS](https://astro.build), and the reference has been updated as such._\n\n---\n\nWhen my employer is hiring, I'm the first to want to refer a good person. I'll reach out to my network of bootcamp grads, asking for resumes, hoping I can get them a job at a great company.\n\nI end up throwing out 99% of them every time.\n\nThe reason is always the same: their GitHub has half a year or much more of total radio silence.\n\nIf there's one piece of advice I could shout from the rooftops, especially to new devs, is that an active GitHub is probably your best competitive advantage to getting an interview or referral cold.\n\nIt's not a perfect system. But it's the system we have. And it never fully made sense to me until I found myself on the receiving end of resumes, with more to go through than time I had available.\n\nSimply put, most resumes with equal experience look the same. New bootcamp grads went to a bootcamp and did a couple of projects (that may or may not be hosted). Those with two years of experience have a company they've worked for, maybe two. And everyone is listing similar languages and technologies they use.\n\nIt's a start, but then I'm left with 5-10 resumes and 1-3 referrals I can comfortably make. At this point I could paste them to a wall and throw a dart. Or I could look at their GitHub.\n\n## Getting your Github ready without loosing sleep\n\nYou can easily increase your candidacy with an active GitHub but **you don't need to go crazy either**. Please don't [Eat-Sleep-Code-Repeat](https://medium.com/@iamtjah/eat-sleep-code-repeat-please-dont-f1453659d703). Simply doing bare minimum places you stratospherically above most others. So here's some simple ways to do just that:\n\n* **Set up some [dotfiles](https://missing.csail.mit.edu/2020/command-line/#dotfiles)** - Effortlessly save your configuration. And whenever you add to it, you get a 🟩. I use [dotbot](https://github.com/anishathalye/dotbot).\n* Whenever you take a class, or code through a book, **put that code on GitHub** - You don't need to author an open source library. Simple code snippets or notes in markdown are great! Put your LeetCode solutions up there too while you're at it. Don't let all the stuff you're already doing collect dust. Get those 🟩s!\n* **[Host your website statically on GitHub](https://pages.github.com/).** - If you have a portfolio, every new thing you add is a 🟩. If you host a blog, new posts are new 🟩. [My website/blog](https://nickpalenchar.com) is hosted [this way](https://github.com/nickpalenchar/nickpalenchar) with [AstroJS](https://astro.build).\n\nIt will be very, very unlikely a hiring manager will look at your actual commits. Simply having anything up there is what matters. It shows you walk the walk and talk the talk. It immediately proves you have basic knowledge of the same version control they are definitely using at work.\n\nAnd again you don't even need to go overboard in frequency. Your 🟩s can be sprinkled like cayenne on a dish that shouldn't be too spicy. But it should not look completely and totally abandoned for the year.\n\n## Reversal \n\nI think an active GitHub is the easiest way to give you a competitive advantage, but there are alternatives if they are your thing. Among them, you could:\n\n* **Be an active blogger** - Personally, [I don't like doing this](https://nickpalenchar.com/worst-blogging-advice/). I'd rather showcase my GitHub.\n* If you're more media oriented, **create a YouTube channel** - Live coding? Put the recording on your YouTube. Do any talks? Get them on YouTube (if you have permission). Or link all your media on a portfolio page (guess where you should host it).\n* And none of the GitHub nonsense applies whenever you're referred by a person who knows you well, or even someone you've met at an event and had a good conversation with.\n\nJust remember, if you do have an alternate to GitHub established, **do not include a link to an empty GitHub in your resume**. You might want to delete your account altogether, if you really never ever use it. Would a photographer link-drop a portfolio with no photos?\n\n## But whyyyyyy does it have to be this way? \n\nYes there are totally flaws in the system. The hiring process has a lot of room for improvement (some companies are trying). You can be a great programmer without doing any of these. But right now, there is no way I can know this by looking at just your resume, and my company will not let me spend 80% of my time talking to candidates to get to know them better.\n\nI totally welcome the conversation to improve the hiring process, from interview to whiteboarding to everything in between. So please write about how its broken and how we can fix it. I would love to read that. Just make sure it gets committed and hosted on GitHub when you do.","content/posts/github.md","d170ea00700733d1",{"html":446,"metadata":447},"\u003Cp>\u003Cem>EDIT 01-23-2025: I’ve changed the framework I use to build this site from \u003Ca href=\"gohugo.com\">Hugo\u003C/a> to \u003Ca href=\"https://astro.build\">AstroJS\u003C/a>, and the reference has been updated as such.\u003C/em>\u003C/p>\n\u003Chr>\n\u003Cp>When my employer is hiring, I’m the first to want to refer a good person. I’ll reach out to my network of bootcamp grads, asking for resumes, hoping I can get them a job at a great company.\u003C/p>\n\u003Cp>I end up throwing out 99% of them every time.\u003C/p>\n\u003Cp>The reason is always the same: their GitHub has half a year or much more of total radio silence.\u003C/p>\n\u003Cp>If there’s one piece of advice I could shout from the rooftops, especially to new devs, is that an active GitHub is probably your best competitive advantage to getting an interview or referral cold.\u003C/p>\n\u003Cp>It’s not a perfect system. But it’s the system we have. And it never fully made sense to me until I found myself on the receiving end of resumes, with more to go through than time I had available.\u003C/p>\n\u003Cp>Simply put, most resumes with equal experience look the same. New bootcamp grads went to a bootcamp and did a couple of projects (that may or may not be hosted). Those with two years of experience have a company they’ve worked for, maybe two. And everyone is listing similar languages and technologies they use.\u003C/p>\n\u003Cp>It’s a start, but then I’m left with 5-10 resumes and 1-3 referrals I can comfortably make. At this point I could paste them to a wall and throw a dart. Or I could look at their GitHub.\u003C/p>\n\u003Ch2 id=\"getting-your-github-ready-without-loosing-sleep\">Getting your Github ready without loosing sleep\u003C/h2>\n\u003Cp>You can easily increase your candidacy with an active GitHub but \u003Cstrong>you don’t need to go crazy either\u003C/strong>. Please don’t \u003Ca href=\"https://medium.com/@iamtjah/eat-sleep-code-repeat-please-dont-f1453659d703\">Eat-Sleep-Code-Repeat\u003C/a>. Simply doing bare minimum places you stratospherically above most others. So here’s some simple ways to do just that:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Set up some \u003Ca href=\"https://missing.csail.mit.edu/2020/command-line/#dotfiles\">dotfiles\u003C/a>\u003C/strong> - Effortlessly save your configuration. And whenever you add to it, you get a 🟩. I use \u003Ca href=\"https://github.com/anishathalye/dotbot\">dotbot\u003C/a>.\u003C/li>\n\u003Cli>Whenever you take a class, or code through a book, \u003Cstrong>put that code on GitHub\u003C/strong> - You don’t need to author an open source library. Simple code snippets or notes in markdown are great! Put your LeetCode solutions up there too while you’re at it. Don’t let all the stuff you’re already doing collect dust. Get those 🟩s!\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://pages.github.com/\">Host your website statically on GitHub\u003C/a>.\u003C/strong> - If you have a portfolio, every new thing you add is a 🟩. If you host a blog, new posts are new 🟩. \u003Ca href=\"https://nickpalenchar.com\">My website/blog\u003C/a> is hosted \u003Ca href=\"https://github.com/nickpalenchar/nickpalenchar\">this way\u003C/a> with \u003Ca href=\"https://astro.build\">AstroJS\u003C/a>.\u003C/li>\n\u003C/ul>\n\u003Cp>It will be very, very unlikely a hiring manager will look at your actual commits. Simply having anything up there is what matters. It shows you walk the walk and talk the talk. It immediately proves you have basic knowledge of the same version control they are definitely using at work.\u003C/p>\n\u003Cp>And again you don’t even need to go overboard in frequency. Your 🟩s can be sprinkled like cayenne on a dish that shouldn’t be too spicy. But it should not look completely and totally abandoned for the year.\u003C/p>\n\u003Ch2 id=\"reversal\">Reversal\u003C/h2>\n\u003Cp>I think an active GitHub is the easiest way to give you a competitive advantage, but there are alternatives if they are your thing. Among them, you could:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Be an active blogger\u003C/strong> - Personally, \u003Ca href=\"https://nickpalenchar.com/worst-blogging-advice/\">I don’t like doing this\u003C/a>. I’d rather showcase my GitHub.\u003C/li>\n\u003Cli>If you’re more media oriented, \u003Cstrong>create a YouTube channel\u003C/strong> - Live coding? Put the recording on your YouTube. Do any talks? Get them on YouTube (if you have permission). Or link all your media on a portfolio page (guess where you should host it).\u003C/li>\n\u003Cli>And none of the GitHub nonsense applies whenever you’re referred by a person who knows you well, or even someone you’ve met at an event and had a good conversation with.\u003C/li>\n\u003C/ul>\n\u003Cp>Just remember, if you do have an alternate to GitHub established, \u003Cstrong>do not include a link to an empty GitHub in your resume\u003C/strong>. You might want to delete your account altogether, if you really never ever use it. Would a photographer link-drop a portfolio with no photos?\u003C/p>\n\u003Ch2 id=\"but-whyyyyyy-does-it-have-to-be-this-way\">But whyyyyyy does it have to be this way?\u003C/h2>\n\u003Cp>Yes there are totally flaws in the system. The hiring process has a lot of room for improvement (some companies are trying). You can be a great programmer without doing any of these. But right now, there is no way I can know this by looking at just your resume, and my company will not let me spend 80% of my time talking to candidates to get to know them better.\u003C/p>\n\u003Cp>I totally welcome the conversation to improve the hiring process, from interview to whiteboarding to everything in between. So please write about how its broken and how we can fix it. I would love to read that. Just make sure it gets committed and hosted on GitHub when you do.\u003C/p>",{"headings":448,"localImagePaths":458,"remoteImagePaths":459,"frontmatter":460,"imagePaths":463},[449,452,455],{"depth":27,"slug":450,"text":451},"getting-your-github-ready-without-loosing-sleep","Getting your Github ready without loosing sleep",{"depth":27,"slug":453,"text":454},"reversal","Reversal",{"depth":27,"slug":456,"text":457},"but-whyyyyyy-does-it-have-to-be-this-way","But whyyyyyy does it have to be this way?",[],[],{"title":437,"date":461,"tags":462,"external":16,"minutesRead":432},["Date","2021-02-06T14:40:03.000Z"],[440,441,434],[],"git-commands",{"id":464,"data":466,"body":473,"filePath":474,"digest":475,"rendered":476},{"title":467,"date":468,"tags":469,"external":16,"aliases":471},"Life Changing Git Commands You Probably Aren't Using.",["Date","2018-05-27T15:28:33.000Z"],[470],"git",[472],"/git","Every developer uses some kind of version-control system (sometimes called VCS). It a fail-safe to losing work, allowing you to jump back in time and reference files as they once were. Because branching is supported, so much more than linearly stepping back in time is possible. VCS is the backbone for agile collaboration, allowing each developer to have their own copy of some codebase, where they can work at their own pace and merge changes back into a master copy when ready.\n\n## Figuring out git\n\nIf you or your company uses GitHub, you're probably very familiar with git. Depending on how well you can wrangle the CLI, git can be amazingly useful or incredibly infuriating. And like everyone else using git, I've ran into numerous problems and found my own various ways out of them. As my experience grew I began to keep a log of \"git solutions\", which in turn revealed a few useful commands I commonly employ. While simple, they've come in handy time and again. Maybe they'll come in handy for you as well!\n\nI call these commands \"life-changing\" because they are so simple yet pretty unknown. But most importantly, after adopting them you will probably find notable differences in your workflow. You'll (hopefully) spend less time on git and more time on what matters--pushing that code!\n\n### git remote -v\n\nThe `-v` option stands for \"verbose\". Many people use `git remote` to verify a remote (usually named `origin`) was added to a repo. Fine for that single case, but we don't get much more information. Especially since most repos have only one remote, frequently with the same `origin` name. If you want a bit more info, `-v` gives you the URL to which those generic `origin` remotes are actually pointing too. I like to think of it as knowing what the value of a variable is in a certain instance, which is often helpful in debugging situations.\n\n**Why it's life-changing:** Ever have a directory you _think_ linked to a certain remote repo but wasn't sure? A directory holding a git project does not have to have the same name as the repo on, say, GitHub, so it could be a similar or vastly outdated repo. Out of caution, some developers might just delete the directory and re-clone the repo, ensuring it is the project they want. But `git remote -v` can validate the remote repo in one step. Observe this sample output:\n\n```shell\n$ git remote -v\norigin  https://github.com/nickpalenchar/nickpalenchar.git (fetch)\norigin  https://github.com/nickpalenchar/nickpalenchar.git (push)\n```\nThe location of where I ran this command is a repo that is linked to my `nickpalenchar` repository under my username (`nickpalenchar`). No recloning needed!\n\n### git commit --allow-empty -m 'your message...'\n\nGenerally, when you try to commit when nothing is staged for doing so, you'll get a `nothing to commit, working tree clean` response, with no commit made. The `--allow-empty` flag bypasses this saftey check, allowing (you guessed it) an empty commit. So even when nothing is staged or changed, a commit will be written to the git log.\n\n**Why it's life-changing:** (I love showing off this one.) There are lots of situations where you need to test doing something with a new commit in order to verify some sort of workflow. A common scenario in my work is verifying a webhook in Continuous Integration will pick up a newly pushed branch. I _could_ `touch yet_another_new_file`, then add it, _then_ commit it. Or I could `git commit --allow-empty -m 'empty commit for debugging'` and push that. So convenient. Just one word of warning: you probably don't want this in a more formal codebase; but it's great for a prototyping/testing repo that you will dispose of.\n\n### git stash / git stash pop\n\nAdmittedly a little more well-known, but if you _weren't_ aware of `stash`, I'm glad I can take this opportunity to enlighten you. `git stash` sets all your working changes aside (on a stack) and gives you a clean working directory. You can git stash multiple times, and the most recent stash will be at the top if the stack that git has been adding them too. As it goes with stacks, `git stash pop` will pop the top-most set of working changes and add them back to the branch you're currently on, ready to be modified or committed.\n\n**Why it's life-changing:** The most common use for a quick `git stash`/`git stash pop` is to move the working changes you've made from one branch to another. Say you've started working on some changes, only to realize you're on the `master` branch! Depending on your repo setup (and if you're in a team), you probably can't push changes from your master branch. You're stuck! This is the classic opportunity for the stash command. Simply `git stash` to set those changes aside, restoring your master branch to good-standing cleanness. Then `git checkout` the branch you intended to use and `git stash pop`. All your new work has been seamlessly moved from one branch to another!\n\n### git rm --cached\n\nAnother one that's a bit well known, but not known enough in my opinion (or I wouldn't still be removing files that were considered removed). `git rm` can remove a file that has previously been committed, but adding `--cached` will better ensure it does not come back.\n\n**Why it's life-changing:** It's life changing when trying to update a `.gitingore` file. Life gets tough when you `git add .` and commit before you remember to add a certain file to a `.gitignore`. Now you have a file tracked that you did not want. To fix this problem in a fool-proof way, you can `git rm --cached name_of_file` (for directory use `git rm --cached -r name_of_dir`), add the file to `.gitignore` and commit all changes. You won't find that file ever showing up in that repo's tracking again. Another word of caution: this is NOT a solution for removing secrets that were accidentally committed, as they will still exist in the git log! But for something like say, removing `node_modules`, this would be the perfect solution.\n\n### Bonus: git auto-complete\n\nNot an actual command but I had to include as it's probably the biggest life-changing thing you can do with git! Git autocomplete will save you a _LOT_ of time (both in typing and fixing typos). Once set up, you'll be able to start typing a few characters of a name, then tab to auto-complete or see all possibilities of the current name fragment. It can autocomplete names of git subcommands, remotes, and branches. You can find steps to set this up [here](http://code-worrier.com/blog/autocomplete-git/) or here in [my bash profile](https://github.com/nickpalenchar/swanked-out-bash).\n\nI love these commands. They've solved common problems quickly, and  have largley improved my overall git competency. Do you have any git commands/tricks you've found to be time-saving? fool-proofing? life-changing!? I'd love for you to share your common git commands in the comments. Thanks for reading!","content/posts/git-commands.md","b2da277d5694e00b",{"html":477,"metadata":478},"\u003Cp>Every developer uses some kind of version-control system (sometimes called VCS). It a fail-safe to losing work, allowing you to jump back in time and reference files as they once were. Because branching is supported, so much more than linearly stepping back in time is possible. VCS is the backbone for agile collaboration, allowing each developer to have their own copy of some codebase, where they can work at their own pace and merge changes back into a master copy when ready.\u003C/p>\n\u003Ch2 id=\"figuring-out-git\">Figuring out git\u003C/h2>\n\u003Cp>If you or your company uses GitHub, you’re probably very familiar with git. Depending on how well you can wrangle the CLI, git can be amazingly useful or incredibly infuriating. And like everyone else using git, I’ve ran into numerous problems and found my own various ways out of them. As my experience grew I began to keep a log of “git solutions”, which in turn revealed a few useful commands I commonly employ. While simple, they’ve come in handy time and again. Maybe they’ll come in handy for you as well!\u003C/p>\n\u003Cp>I call these commands “life-changing” because they are so simple yet pretty unknown. But most importantly, after adopting them you will probably find notable differences in your workflow. You’ll (hopefully) spend less time on git and more time on what matters—pushing that code!\u003C/p>\n\u003Ch3 id=\"git-remote--v\">git remote -v\u003C/h3>\n\u003Cp>The \u003Ccode>-v\u003C/code> option stands for “verbose”. Many people use \u003Ccode>git remote\u003C/code> to verify a remote (usually named \u003Ccode>origin\u003C/code>) was added to a repo. Fine for that single case, but we don’t get much more information. Especially since most repos have only one remote, frequently with the same \u003Ccode>origin\u003C/code> name. If you want a bit more info, \u003Ccode>-v\u003C/code> gives you the URL to which those generic \u003Ccode>origin\u003C/code> remotes are actually pointing too. I like to think of it as knowing what the value of a variable is in a certain instance, which is often helpful in debugging situations.\u003C/p>\n\u003Cp>\u003Cstrong>Why it’s life-changing:\u003C/strong> Ever have a directory you \u003Cem>think\u003C/em> linked to a certain remote repo but wasn’t sure? A directory holding a git project does not have to have the same name as the repo on, say, GitHub, so it could be a similar or vastly outdated repo. Out of caution, some developers might just delete the directory and re-clone the repo, ensuring it is the project they want. But \u003Ccode>git remote -v\u003C/code> can validate the remote repo in one step. Observe this sample output:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"shell\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">$\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> git\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> remote\u003C/span>\u003Cspan style=\"color:#79B8FF\"> -v\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">origin\u003C/span>\u003Cspan style=\"color:#9ECBFF\">  https://github.com/nickpalenchar/nickpalenchar.git\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (fetch)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">origin\u003C/span>\u003Cspan style=\"color:#9ECBFF\">  https://github.com/nickpalenchar/nickpalenchar.git\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (push)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>The location of where I ran this command is a repo that is linked to my \u003Ccode>nickpalenchar\u003C/code> repository under my username (\u003Ccode>nickpalenchar\u003C/code>). No recloning needed!\u003C/p>\n\u003Ch3 id=\"git-commit-allow-empty--m-your-message\">git commit —allow-empty -m ‘your message…’\u003C/h3>\n\u003Cp>Generally, when you try to commit when nothing is staged for doing so, you’ll get a \u003Ccode>nothing to commit, working tree clean\u003C/code> response, with no commit made. The \u003Ccode>--allow-empty\u003C/code> flag bypasses this saftey check, allowing (you guessed it) an empty commit. So even when nothing is staged or changed, a commit will be written to the git log.\u003C/p>\n\u003Cp>\u003Cstrong>Why it’s life-changing:\u003C/strong> (I love showing off this one.) There are lots of situations where you need to test doing something with a new commit in order to verify some sort of workflow. A common scenario in my work is verifying a webhook in Continuous Integration will pick up a newly pushed branch. I \u003Cem>could\u003C/em> \u003Ccode>touch yet_another_new_file\u003C/code>, then add it, \u003Cem>then\u003C/em> commit it. Or I could \u003Ccode>git commit --allow-empty -m 'empty commit for debugging'\u003C/code> and push that. So convenient. Just one word of warning: you probably don’t want this in a more formal codebase; but it’s great for a prototyping/testing repo that you will dispose of.\u003C/p>\n\u003Ch3 id=\"git-stash--git-stash-pop\">git stash / git stash pop\u003C/h3>\n\u003Cp>Admittedly a little more well-known, but if you \u003Cem>weren’t\u003C/em> aware of \u003Ccode>stash\u003C/code>, I’m glad I can take this opportunity to enlighten you. \u003Ccode>git stash\u003C/code> sets all your working changes aside (on a stack) and gives you a clean working directory. You can git stash multiple times, and the most recent stash will be at the top if the stack that git has been adding them too. As it goes with stacks, \u003Ccode>git stash pop\u003C/code> will pop the top-most set of working changes and add them back to the branch you’re currently on, ready to be modified or committed.\u003C/p>\n\u003Cp>\u003Cstrong>Why it’s life-changing:\u003C/strong> The most common use for a quick \u003Ccode>git stash\u003C/code>/\u003Ccode>git stash pop\u003C/code> is to move the working changes you’ve made from one branch to another. Say you’ve started working on some changes, only to realize you’re on the \u003Ccode>master\u003C/code> branch! Depending on your repo setup (and if you’re in a team), you probably can’t push changes from your master branch. You’re stuck! This is the classic opportunity for the stash command. Simply \u003Ccode>git stash\u003C/code> to set those changes aside, restoring your master branch to good-standing cleanness. Then \u003Ccode>git checkout\u003C/code> the branch you intended to use and \u003Ccode>git stash pop\u003C/code>. All your new work has been seamlessly moved from one branch to another!\u003C/p>\n\u003Ch3 id=\"git-rm-cached\">git rm —cached\u003C/h3>\n\u003Cp>Another one that’s a bit well known, but not known enough in my opinion (or I wouldn’t still be removing files that were considered removed). \u003Ccode>git rm\u003C/code> can remove a file that has previously been committed, but adding \u003Ccode>--cached\u003C/code> will better ensure it does not come back.\u003C/p>\n\u003Cp>\u003Cstrong>Why it’s life-changing:\u003C/strong> It’s life changing when trying to update a \u003Ccode>.gitingore\u003C/code> file. Life gets tough when you \u003Ccode>git add .\u003C/code> and commit before you remember to add a certain file to a \u003Ccode>.gitignore\u003C/code>. Now you have a file tracked that you did not want. To fix this problem in a fool-proof way, you can \u003Ccode>git rm --cached name_of_file\u003C/code> (for directory use \u003Ccode>git rm --cached -r name_of_dir\u003C/code>), add the file to \u003Ccode>.gitignore\u003C/code> and commit all changes. You won’t find that file ever showing up in that repo’s tracking again. Another word of caution: this is NOT a solution for removing secrets that were accidentally committed, as they will still exist in the git log! But for something like say, removing \u003Ccode>node_modules\u003C/code>, this would be the perfect solution.\u003C/p>\n\u003Ch3 id=\"bonus-git-auto-complete\">Bonus: git auto-complete\u003C/h3>\n\u003Cp>Not an actual command but I had to include as it’s probably the biggest life-changing thing you can do with git! Git autocomplete will save you a \u003Cem>LOT\u003C/em> of time (both in typing and fixing typos). Once set up, you’ll be able to start typing a few characters of a name, then tab to auto-complete or see all possibilities of the current name fragment. It can autocomplete names of git subcommands, remotes, and branches. You can find steps to set this up \u003Ca href=\"http://code-worrier.com/blog/autocomplete-git/\">here\u003C/a> or here in \u003Ca href=\"https://github.com/nickpalenchar/swanked-out-bash\">my bash profile\u003C/a>.\u003C/p>\n\u003Cp>I love these commands. They’ve solved common problems quickly, and  have largley improved my overall git competency. Do you have any git commands/tricks you’ve found to be time-saving? fool-proofing? life-changing!? I’d love for you to share your common git commands in the comments. Thanks for reading!\u003C/p>",{"headings":479,"localImagePaths":498,"remoteImagePaths":499,"frontmatter":500,"imagePaths":505},[480,483,486,489,492,495],{"depth":27,"slug":481,"text":482},"figuring-out-git","Figuring out git",{"depth":136,"slug":484,"text":485},"git-remote--v","git remote -v",{"depth":136,"slug":487,"text":488},"git-commit-allow-empty--m-your-message","git commit —allow-empty -m ‘your message…’",{"depth":136,"slug":490,"text":491},"git-stash--git-stash-pop","git stash / git stash pop",{"depth":136,"slug":493,"text":494},"git-rm-cached","git rm —cached",{"depth":136,"slug":496,"text":497},"bonus-git-auto-complete","Bonus: git auto-complete",[],[],{"title":467,"date":501,"tags":502,"aliases":503,"external":16,"minutesRead":504},["Date","2018-05-27T15:28:33.000Z"],[470],[472],"6 min read",[],"so-you-want-to-be-a-software-engineer",{"id":506,"data":508,"body":511,"filePath":512,"digest":513,"rendered":514},{"title":509,"date":510,"external":16},"So You Want to Be a Software Engineer (2025 Edition)",["Date","2024-04-09T12:41:42.000Z"],"This is my general advice to the anonymous masses--and is written in broad strokes. There is, of course, a lot more nuance depending on a number of factors like the economy, socioeconomic status, and--of course--luck.\n\nI've previously written this back when I was just starting out as a Developer myself: [Please Maybe Learn to Code](/post/please-maybe-learn-to-code)\n\n---\n\nThis is for the individual that believes Software Engineering is the road to easy money. While it _does_ pay incredibly well and can transform your financial life, it is certainly _not_ an easy path--and it never will be.\n\nThe reason is capitalism. Jobs are hard and therefore someone wants to pay someone else to do it for them. If coding were easy, _everyone_ would do it themselves, rather than hiring others.\n\nRegardless, I think many people can make a succesful leap into software development, even non-traditionally, even in  It's something I think most people should strongly consider, especially if\nthey haven't found fulfillment or stability in their current career. Tech is a fantastic career choice. It pays very well, it's\nsecure, and is available virtually anyone willing to put in the time and effort.\n\nBut tech isn't perfect, despite the fact that many Coding Bootcamps' landing pages have overly-romanticized\nthat fact. Among many things, some difficulty in Tech includes:\n\n## Burnout\n\nBurnout is one of the biggest risks in the industry. You can do a lot of things as a programmer, but there will always\nseem to be a growing backlog. On top of this, the need to keep up while building features and solving bugs can leave\nyou strangely tired from the brain fatigue. The industry also has ups and downs, and during the downs, programmers are the first to\nfeel immense pressure to hold everything together.\n\nWhen an app has an Incident (such as crashes and becomes unavailable), the company you work for starts bleeding money\nby the second. You may be part of the Incident Response where you need to think fast and frantically try to fix things\nwithout making it work. It's a lot of pressure!\n\n## The Need To Keep Up\n\nLearning never ends with tech. This is mostly great as it keeps the work from getting too boring, but it means\nyou never really can kick back and completely relax. Technology changes and you'll often need to spend some hours\noutside of work to brush up on new concepts. This constant need to keep learning also contributes to burnout.\n\nSo eliminate the thoughts that once you learn to code and get into the industry, it'll be smooth sailing.\n\n## The Interviewing Game\n\nThe sheer amount of applications you'll submit before getting that first phone call is not fun for anybody.\nAnd once you get through the initial phase, there's plenty of technical interview rounds you'll find yourself\nrejected from, including some where you were so sure you solved the problem well. Interviewing is a numbers game, and\nwhile your in it, it can feel unending.\n\n## Biases\n\nUnfortunately, there are still some biases in the industry, particularly around age as well as gender. If you\nare older (50+) you may have to work particularly hard at combating some of these biases. You may find less\nopportunities are available. Particularly with start-ups, you might also find yourself decades older than all of your\nco-workers, which could be uncomfortable for some.\n\n## Despite this... it's worth it.\n\nAttending a bootcamp and breaking into tech was nothing short but life changing for me. With practice, patience, and persistence, you'll soon see results that\ncompound. Because everyone relies on tech, you'll be able to make an impact in just about any industry, and\nget paid handsomely for doing so. You'll also have the ability to build anything you could personally imagine,\nincluding your own company.\n\nIt takes a lot of discipline, but pays off if you have the drive and the trust. Good luck!","content/posts/so-you-want-to-be-a-software-engineer.md","15f599a1e29d03b3",{"html":515,"metadata":516},"\u003Cp>This is my general advice to the anonymous masses—and is written in broad strokes. There is, of course, a lot more nuance depending on a number of factors like the economy, socioeconomic status, and—of course—luck.\u003C/p>\n\u003Cp>I’ve previously written this back when I was just starting out as a Developer myself: \u003Ca href=\"/post/please-maybe-learn-to-code\">Please Maybe Learn to Code\u003C/a>\u003C/p>\n\u003Chr>\n\u003Cp>This is for the individual that believes Software Engineering is the road to easy money. While it \u003Cem>does\u003C/em> pay incredibly well and can transform your financial life, it is certainly \u003Cem>not\u003C/em> an easy path—and it never will be.\u003C/p>\n\u003Cp>The reason is capitalism. Jobs are hard and therefore someone wants to pay someone else to do it for them. If coding were easy, \u003Cem>everyone\u003C/em> would do it themselves, rather than hiring others.\u003C/p>\n\u003Cp>Regardless, I think many people can make a succesful leap into software development, even non-traditionally, even in  It’s something I think most people should strongly consider, especially if\nthey haven’t found fulfillment or stability in their current career. Tech is a fantastic career choice. It pays very well, it’s\nsecure, and is available virtually anyone willing to put in the time and effort.\u003C/p>\n\u003Cp>But tech isn’t perfect, despite the fact that many Coding Bootcamps’ landing pages have overly-romanticized\nthat fact. Among many things, some difficulty in Tech includes:\u003C/p>\n\u003Ch2 id=\"burnout\">Burnout\u003C/h2>\n\u003Cp>Burnout is one of the biggest risks in the industry. You can do a lot of things as a programmer, but there will always\nseem to be a growing backlog. On top of this, the need to keep up while building features and solving bugs can leave\nyou strangely tired from the brain fatigue. The industry also has ups and downs, and during the downs, programmers are the first to\nfeel immense pressure to hold everything together.\u003C/p>\n\u003Cp>When an app has an Incident (such as crashes and becomes unavailable), the company you work for starts bleeding money\nby the second. You may be part of the Incident Response where you need to think fast and frantically try to fix things\nwithout making it work. It’s a lot of pressure!\u003C/p>\n\u003Ch2 id=\"the-need-to-keep-up\">The Need To Keep Up\u003C/h2>\n\u003Cp>Learning never ends with tech. This is mostly great as it keeps the work from getting too boring, but it means\nyou never really can kick back and completely relax. Technology changes and you’ll often need to spend some hours\noutside of work to brush up on new concepts. This constant need to keep learning also contributes to burnout.\u003C/p>\n\u003Cp>So eliminate the thoughts that once you learn to code and get into the industry, it’ll be smooth sailing.\u003C/p>\n\u003Ch2 id=\"the-interviewing-game\">The Interviewing Game\u003C/h2>\n\u003Cp>The sheer amount of applications you’ll submit before getting that first phone call is not fun for anybody.\nAnd once you get through the initial phase, there’s plenty of technical interview rounds you’ll find yourself\nrejected from, including some where you were so sure you solved the problem well. Interviewing is a numbers game, and\nwhile your in it, it can feel unending.\u003C/p>\n\u003Ch2 id=\"biases\">Biases\u003C/h2>\n\u003Cp>Unfortunately, there are still some biases in the industry, particularly around age as well as gender. If you\nare older (50+) you may have to work particularly hard at combating some of these biases. You may find less\nopportunities are available. Particularly with start-ups, you might also find yourself decades older than all of your\nco-workers, which could be uncomfortable for some.\u003C/p>\n\u003Ch2 id=\"despite-this-its-worth-it\">Despite this… it’s worth it.\u003C/h2>\n\u003Cp>Attending a bootcamp and breaking into tech was nothing short but life changing for me. With practice, patience, and persistence, you’ll soon see results that\ncompound. Because everyone relies on tech, you’ll be able to make an impact in just about any industry, and\nget paid handsomely for doing so. You’ll also have the ability to build anything you could personally imagine,\nincluding your own company.\u003C/p>\n\u003Cp>It takes a lot of discipline, but pays off if you have the drive and the trust. Good luck!\u003C/p>",{"headings":517,"localImagePaths":533,"remoteImagePaths":534,"frontmatter":535,"imagePaths":537},[518,521,524,527,530],{"depth":27,"slug":519,"text":520},"burnout","Burnout",{"depth":27,"slug":522,"text":523},"the-need-to-keep-up","The Need To Keep Up",{"depth":27,"slug":525,"text":526},"the-interviewing-game","The Interviewing Game",{"depth":27,"slug":528,"text":529},"biases","Biases",{"depth":27,"slug":531,"text":532},"despite-this-its-worth-it","Despite this… it’s worth it.",[],[],{"external":16,"title":509,"date":536,"minutesRead":432},["Date","2024-04-09T12:41:42.000Z"],[],"please-maybe-learn-to-code",{"id":538,"data":540,"body":546,"filePath":547,"digest":548,"rendered":549},{"title":541,"date":542,"tags":543,"external":16},"Please Maybe Learn to Code",["Date","2016-05-14T15:33:31.000Z"],[544,545],"opinion","tech industry","\"Please Learn to Code.\" \"Please don't learn to code.\" The debate about whether everyone should learn to code is as polarizing as it is perennial. I read the [Tech Crunch article](http://techcrunch.com/2016/05/10/please-dont-learn-to-code/). I read the [FreeCodeCamp](https://medium.freecodecamp.com/please-do-learn-to-code-233597dd141c#.f86wmzk61) article. For good measure, I also read the [Coding Horror](http://blog.codinghorror.com/please-dont-learn-to-code/) article mentioned by the FreeCodeCamp article. My reaction? They all have valid points and are all worth reading. I don’t think these articles are in direct conflict with each other as we might have believed them to be.\n\n## The Case for Teaching Coding in Schools\n\nFirst, let’s address a recurring theme in these conversations: integrating computer science into school curricula. This topic, while related, often gets conflated with the broader question of whether individuals should pursue coding professionally.\n\nTeaching programming in schools is not about turning every student into a software engineer. The true goal is exposure. Just as not every student who learns algebra becomes a mathematician, programming education equips students with foundational skills and opens doors to those who discover a passion for it. The argument against teaching coding because not every student will use it professionally misses the point of education entirely.\n\nProgramming is increasingly as essential as reading or arithmetic in today’s world. Basic coding literacy can empower students to navigate and understand technology, regardless of their career paths. Let’s make it part of the curriculum—there’s nothing to lose.\n\n## Coding as a Career: A Reality Check\n\nShould you learn to code to build a career? Here, the skeptics—the “don’t learn to code” advocates—make some critical points. Programming is a challenging field, requiring constant learning, problem-solving, and perseverance. It’s not something you master through a three-month bootcamp or a handful of online courses. While bootcamps and platforms like Codecademy are great starting points, they’re just that: starting points.\n\nPursuing programming as a career demands resilience and a genuine passion for the craft. The work can be frustrating and, at times, overwhelming. Success in this field often comes down to persistence—an intrinsic drive to solve problems and create.\n\n## The Value of Coding Literacy\n\nEven if programming isn’t your career goal, learning to code offers undeniable benefits. Consider the oft-used analogy comparing programming to plumbing. While you may never become a professional plumber, understanding the basics can save you time and money when addressing minor issues at home. Similarly, coding skills can help you:\n- Write a simple script to automate repetitive tasks.\n- Customize tools to suit your needs.\n- Understand how websites and software work at a fundamental level.\n- These skills are increasingly valuable in a world where technology permeates every industry.\n\n## The Takeaway?\n\nBoth sides of this debate offer important lessons. From the skeptics, we learn that programming is a demanding profession requiring dedication. The “hype” surrounding coding should not obscure the reality of the hard work involved. Those drawn to coding for its perceived glamour may find themselves quickly disillusioned.\n\nFrom the advocates, we’re reminded that coding is not magic. It’s a learnable, teachable skill accessible to anyone willing to put in the effort. The rise of initiatives like code.org and FreeCodeCamp has demystified programming, making it more approachable for those eager to explore the field.\n\nFor me, this movement was transformative. In high school, I dabbled in programming by building video games with tools like GameMaker. At the time, a career in software engineering felt unattainable. However, initiatives promoting coding literacy helped me see a path forward. Today, I dedicate countless hours to honing my craft, and I wouldn’t have it any other way.\n\nWhether your goal is to pursue programming professionally or simply to gain a better understanding of the digital world, learning to code is a worthwhile endeavor. The key is to approach it with clear expectations and a willingness to embrace the challenges ahead.","content/posts/please-maybe-learn-to-code.md","0bdc9bb12014f961",{"html":550,"metadata":551},"\u003Cp>“Please Learn to Code.” “Please don’t learn to code.” The debate about whether everyone should learn to code is as polarizing as it is perennial. I read the \u003Ca href=\"http://techcrunch.com/2016/05/10/please-dont-learn-to-code/\">Tech Crunch article\u003C/a>. I read the \u003Ca href=\"https://medium.freecodecamp.com/please-do-learn-to-code-233597dd141c#.f86wmzk61\">FreeCodeCamp\u003C/a> article. For good measure, I also read the \u003Ca href=\"http://blog.codinghorror.com/please-dont-learn-to-code/\">Coding Horror\u003C/a> article mentioned by the FreeCodeCamp article. My reaction? They all have valid points and are all worth reading. I don’t think these articles are in direct conflict with each other as we might have believed them to be.\u003C/p>\n\u003Ch2 id=\"the-case-for-teaching-coding-in-schools\">The Case for Teaching Coding in Schools\u003C/h2>\n\u003Cp>First, let’s address a recurring theme in these conversations: integrating computer science into school curricula. This topic, while related, often gets conflated with the broader question of whether individuals should pursue coding professionally.\u003C/p>\n\u003Cp>Teaching programming in schools is not about turning every student into a software engineer. The true goal is exposure. Just as not every student who learns algebra becomes a mathematician, programming education equips students with foundational skills and opens doors to those who discover a passion for it. The argument against teaching coding because not every student will use it professionally misses the point of education entirely.\u003C/p>\n\u003Cp>Programming is increasingly as essential as reading or arithmetic in today’s world. Basic coding literacy can empower students to navigate and understand technology, regardless of their career paths. Let’s make it part of the curriculum—there’s nothing to lose.\u003C/p>\n\u003Ch2 id=\"coding-as-a-career-a-reality-check\">Coding as a Career: A Reality Check\u003C/h2>\n\u003Cp>Should you learn to code to build a career? Here, the skeptics—the “don’t learn to code” advocates—make some critical points. Programming is a challenging field, requiring constant learning, problem-solving, and perseverance. It’s not something you master through a three-month bootcamp or a handful of online courses. While bootcamps and platforms like Codecademy are great starting points, they’re just that: starting points.\u003C/p>\n\u003Cp>Pursuing programming as a career demands resilience and a genuine passion for the craft. The work can be frustrating and, at times, overwhelming. Success in this field often comes down to persistence—an intrinsic drive to solve problems and create.\u003C/p>\n\u003Ch2 id=\"the-value-of-coding-literacy\">The Value of Coding Literacy\u003C/h2>\n\u003Cp>Even if programming isn’t your career goal, learning to code offers undeniable benefits. Consider the oft-used analogy comparing programming to plumbing. While you may never become a professional plumber, understanding the basics can save you time and money when addressing minor issues at home. Similarly, coding skills can help you:\u003C/p>\n\u003Cul>\n\u003Cli>Write a simple script to automate repetitive tasks.\u003C/li>\n\u003Cli>Customize tools to suit your needs.\u003C/li>\n\u003Cli>Understand how websites and software work at a fundamental level.\u003C/li>\n\u003Cli>These skills are increasingly valuable in a world where technology permeates every industry.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"the-takeaway\">The Takeaway?\u003C/h2>\n\u003Cp>Both sides of this debate offer important lessons. From the skeptics, we learn that programming is a demanding profession requiring dedication. The “hype” surrounding coding should not obscure the reality of the hard work involved. Those drawn to coding for its perceived glamour may find themselves quickly disillusioned.\u003C/p>\n\u003Cp>From the advocates, we’re reminded that coding is not magic. It’s a learnable, teachable skill accessible to anyone willing to put in the effort. The rise of initiatives like code.org and FreeCodeCamp has demystified programming, making it more approachable for those eager to explore the field.\u003C/p>\n\u003Cp>For me, this movement was transformative. In high school, I dabbled in programming by building video games with tools like GameMaker. At the time, a career in software engineering felt unattainable. However, initiatives promoting coding literacy helped me see a path forward. Today, I dedicate countless hours to honing my craft, and I wouldn’t have it any other way.\u003C/p>\n\u003Cp>Whether your goal is to pursue programming professionally or simply to gain a better understanding of the digital world, learning to code is a worthwhile endeavor. The key is to approach it with clear expectations and a willingness to embrace the challenges ahead.\u003C/p>",{"headings":552,"localImagePaths":565,"remoteImagePaths":566,"frontmatter":567,"imagePaths":570},[553,556,559,562],{"depth":27,"slug":554,"text":555},"the-case-for-teaching-coding-in-schools","The Case for Teaching Coding in Schools",{"depth":27,"slug":557,"text":558},"coding-as-a-career-a-reality-check","Coding as a Career: A Reality Check",{"depth":27,"slug":560,"text":561},"the-value-of-coding-literacy","The Value of Coding Literacy",{"depth":27,"slug":563,"text":564},"the-takeaway","The Takeaway?",[],[],{"title":541,"date":568,"tags":569,"external":16,"minutesRead":432},["Date","2016-05-14T15:33:31.000Z"],[544,545],[],"organizing-meetups",{"id":571,"data":573,"body":575,"filePath":576,"digest":577,"rendered":578},{"title":358,"date":574,"external":16,"draft":240},["Date","2025-01-21T00:00:00.000Z"],"context - in nyc, favor in person meetups\n\n## Proximity Matters\n\n## Consistency is Key\n\n## Rescheduling is the Death of Meetups","content/posts/organizing-meetups.md","7a3b8bbb5f65a494",{"html":579,"metadata":580},"\u003Cp>context - in nyc, favor in person meetups\u003C/p>\n\u003Ch2 id=\"proximity-matters\">Proximity Matters\u003C/h2>\n\u003Ch2 id=\"consistency-is-key\">Consistency is Key\u003C/h2>\n\u003Ch2 id=\"rescheduling-is-the-death-of-meetups\">Rescheduling is the Death of Meetups\u003C/h2>",{"headings":581,"localImagePaths":591,"remoteImagePaths":592,"frontmatter":593,"imagePaths":595},[582,585,588],{"depth":27,"slug":583,"text":584},"proximity-matters","Proximity Matters",{"depth":27,"slug":586,"text":587},"consistency-is-key","Consistency is Key",{"depth":27,"slug":589,"text":590},"rescheduling-is-the-death-of-meetups","Rescheduling is the Death of Meetups",[],[],{"title":358,"date":594,"external":16,"draft":240,"minutesRead":35},["Date","2025-01-21T00:00:00.000Z"],[],"quote",{"id":596,"data":598,"body":601,"filePath":602,"digest":603,"rendered":604},{"title":338,"date":599,"tags":600,"external":16},["Date","2021-02-06T14:40:03.000Z"],[341],"“The walls of hospitals have heard more honest prayers than churches…\nThey have witnessed far more sincere kisses than those in airports…\nIt is in hospitals that you see a homophobe being saved by a gay doctor.\nA privileged doctor saving the life of a beggar…\nIn intensive care, you see a Jew taking care of a racist…\nA police officer and a prisoner in the same room receiving the same care…\nA wealthy patient waiting for a liver transplant, ready to receive the organ from a poor donor…\n\nIt is in these moments, when the hospital touches the wounds of people, that different worlds intersect according to a divine design. And in this communion of destinies, we realize that alone, we are nothing.\n\nThe absolute truth of people, most of the time, only reveals itself in moments of pain or in the real threat of an irreversible loss.\n\nA hospital is a place where human beings remove their masks and show themselves as they truly are, in their purest essence.\n\n**This life will pass quickly, so do not waste it fighting with people.**\nDo not criticize your body too much.\nDo not complain excessively.\nDo not lose sleep over bills.\nMake sure to hug your loved ones.\nDo not worry too much about keeping the house spotless.\nMaterial goods must be earned by each person-—do not dedicate yourself to accumulating an inheritance…\n\n**You are waiting for too much:** Christmas; Friday; next year; when you have money; when love arrives; when everything is perfect...\n\nListen, perfection does not exist.\nA human being cannot attain it because we are simply not made to be fulfilled here.\nHere, we are given an opportunity to learn.\n\nSo, make the most of this trial of life—-and **do it now.**\n\nRespect yourself, respect others. Walk your own path, and let go of the path others have chosen for you.\nRespect: do not comment, do not judge, do not interfere.\n\n**Love more, forgive more, embrace more, live more intensely!**\nAnd leave the rest in the hands of the Creator.","content/posts/quote.md","4d1f04af7316033b",{"html":605,"metadata":606},"\u003Cp>“The walls of hospitals have heard more honest prayers than churches…\nThey have witnessed far more sincere kisses than those in airports…\nIt is in hospitals that you see a homophobe being saved by a gay doctor.\nA privileged doctor saving the life of a beggar…\nIn intensive care, you see a Jew taking care of a racist…\nA police officer and a prisoner in the same room receiving the same care…\nA wealthy patient waiting for a liver transplant, ready to receive the organ from a poor donor…\u003C/p>\n\u003Cp>It is in these moments, when the hospital touches the wounds of people, that different worlds intersect according to a divine design. And in this communion of destinies, we realize that alone, we are nothing.\u003C/p>\n\u003Cp>The absolute truth of people, most of the time, only reveals itself in moments of pain or in the real threat of an irreversible loss.\u003C/p>\n\u003Cp>A hospital is a place where human beings remove their masks and show themselves as they truly are, in their purest essence.\u003C/p>\n\u003Cp>\u003Cstrong>This life will pass quickly, so do not waste it fighting with people.\u003C/strong>\nDo not criticize your body too much.\nDo not complain excessively.\nDo not lose sleep over bills.\nMake sure to hug your loved ones.\nDo not worry too much about keeping the house spotless.\nMaterial goods must be earned by each person-—do not dedicate yourself to accumulating an inheritance…\u003C/p>\n\u003Cp>\u003Cstrong>You are waiting for too much:\u003C/strong> Christmas; Friday; next year; when you have money; when love arrives; when everything is perfect…\u003C/p>\n\u003Cp>Listen, perfection does not exist.\nA human being cannot attain it because we are simply not made to be fulfilled here.\nHere, we are given an opportunity to learn.\u003C/p>\n\u003Cp>So, make the most of this trial of life—-and \u003Cstrong>do it now.\u003C/strong>\u003C/p>\n\u003Cp>Respect yourself, respect others. Walk your own path, and let go of the path others have chosen for you.\nRespect: do not comment, do not judge, do not interfere.\u003C/p>\n\u003Cp>\u003Cstrong>Love more, forgive more, embrace more, live more intensely!\u003C/strong>\nAnd leave the rest in the hands of the Creator.\u003C/p>",{"headings":607,"localImagePaths":608,"remoteImagePaths":609,"frontmatter":610,"imagePaths":613},[],[],[],{"title":338,"date":611,"tags":612,"external":16,"minutesRead":209},["Date","2021-02-06T14:40:03.000Z"],[341],[],"url-shortener",{"id":614,"data":616,"body":622,"filePath":623,"digest":624,"rendered":625},{"title":617,"date":618,"tags":619,"external":16},"An interviewer once asked me how I would build a url-shortener app. After discussion, I decided to actually do it. Here's what I designed (and how you can contribute to the Open Source project)",["Date","2018-03-31T15:22:20.000Z"],[620,621],"tutorial","interview prep","About a year back I had an on-site interview at a very large finance company. I spent the day meeting engineers from every department, and was asked to whiteboard solutions to many problems. Some were very mathmatical algorithms, others were architectures for things like microservices and AWS. Among the questions, my favorite was making a URL shortener, similar to bit.ly.\n\n```\nTHE CHALLENGE\nDesign a URL shortener app. It should have a dashboard for users that can submit a link to be shortened. The app will generate a shortened version (using its own domain) that would redirect to the URL when navigated to.\n\nEXAMPLE\nSubmitting www.averylonglink.com/with/additional/routes would produce shortener.io/ohk4 (or something like that). Navigating to shortener.io/ohk4 would load www.averylonglink.com/with/additional/routes.\n```\n\nThere was no coding, or talk of specific technologies. However, fast-forward to 8 months later, we have a chosen stack and a deployed app.\n\n![](http://www.nickpalenserve.us/public/images/palento_home.png \"The home page.\")\n\n---\n\n![](http://www.nickpalenserve.us/public/images/palento_dashboard.png \"The dashboard.\")\n\nThe end result is palen-to (The first two syllables of my last name, and the .to TLD).\n\nMost of the original considerations from the interview room went into the implementation (with more on the way). Among these were:\n\n+ A way to randomly generate a URL.\n+ A way to ensure all URLs are unique.\n+ A way to make custom shortened URL names.\n+ A way to preview potentially malicious redirects (planned)\n\nBecause Palen-to is branded with my last name, I'm only allowing signups from family members that share it. So I've since built in the following feature:\n\n+ Sign-up restricted to whitelisted individuals.\n\n## How it's made.\n\nI've built a minimal implementation as a fullstack javascript application. Here's the stack with some pertinent technologies:\n\n+ Static HTML \\[Frontend]\n  + Bootstrap 3 components (minimal)\n+ Node/expressJS \\[Server]\n  + [Swig](http://node-swig.github.io/swig-templates) rendering.\n+ MongoDB \\[Database]\n\nThat's it! Simple, no?\n\n### Setting up redirect routes.\n\nObviously, the name of the game is looking up dynamic shortened routes and redirecting to a specified longer URL. But that's not the _only_ thing this app should do. Like any well-designed app, this one should have a dashboard and functional routes that allow users to create redirects. These _static_ (or hard-coded, pre-defined) routes should _not_ cause a redirect but instead render our own internal views or api functionality.\n\nSo let's start by defining some views:\n\n```\n/           -> Landing Page/login\n/dashboard  -> Swig-rendered list of redirect routes made, and a field to make new ones.\n/error      -> Rendering of errors\n/api/*      -> Namespace for different api routes, to allow things like a POST request for making new urls\n/:redirect  -> All the rest will attempt to lookup and redirect a short route to a url.\n```\n\n\nIt's important to node re: Express, that the order of these routes are _very important_. In general, important/static routes should go first, and dynamic/general routes should go second/last. Express will trigger middlewere the first time it's match. Take this simple example.\n\n```javascript\n\napp.get('/:redirectURL', (req, res) => res.status(308).send('this would be the redirect'));\n\napp.get('/dashboard', (req, res) => res.status(200).send('got the dashboard!');\n\n```\n\nSince the first route is a param (preceeded by a `:`), the route would act as a wild card, catching any named route, _including_ dashboard. If you tried to get to your actual dashboard, we would be intercepted by a redirect lookup every time!\n\nWe can reverse these without the inverse being true, however. If `/dashboard` came first, any top level route that wasn't `/dashboard` would skip that middleware and eventually find its way to the redirect lookup.\n\nIn the full example, all of these pre-defined routes should go before the redirectURL.\n\n### Creating and looking up redirect links.\n\nEnough planning, let's dive into the main course: the actual shortening of the links. I've opensourced Palen-to into a generic app ready for cloning and deploying, called [https://github.com/nickpalencharopen/tinytiny](TinyTiny). I'll refer to the code there when going into detail about the app, but will refer to the domain where my version is deployed to: [palen.to](https://palen.to). Feel free to clone the opensource version and follow along, or view on GitHub!\n\n#### Data model.\n\nThere's only one important data model here, the `Link`. Every url gets shortened to a unique route in the app, such as `'abc'` in `palen.to/abc`. And that identifier has a one-to-one relation with the expanded url. Both these\n\n\nAssuming the request is not a reserved route (such as `palen.to/dashboard`), we should look up the document in the data model by that route. There we can find the full URL to direct to. In the data model, we have the following values:\n\n+ **link_id**: The shortened link (`abc` in `palen.to/abc`). Also serves as the unique id for the document (looking up documents by the native Mongo `_id` is not nescessary).\n+ **expandedUrl**: The full url that the shortened route is supposed to redirect to (i.e. `www.nickpalenchar.com`).\n\nAdditionally, we'll add some meta data to the model. Knowing the user that made the shortened link is always helpful for getting list of links for a logged in user, and auditing purposes. A creation date is always a good idea as well.\n\nThe full schema of the Link model looks like this! ([view on github](https://github.com/nickpalencharOpen/tinytiny/blob/master/models/link.js)):\n\n```javascript\nlet mongoose = require('mongoose');\n\nlet LinkSchema = new mongoose.Schema({\n    link_id: {type: String, unique: true, required: true},\n    expandedUrl: String,\n    author: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },\n    creationDate: { type: Date, default: Date.now }\n});\n\nmongoose.model('Link', LinkSchema);\n```\n\nGetting a redirect route is a matter of finding a Link document by its `link_id`. If we get a document back, we can use the `expandedUrl` property for the redirection. Express makes redirects very easy, just call the `res.redirect` method and \"Bam!\", you get to your destination. If we can't find a document, we send back an internal 404.\n\n([view on github](https://github.com/nickpalencharOpen/tinytiny/blob/master/app.js#L121-L130))\n\n```javascript\n\napp.get('/:id', (req, res) => {\n    //@@~~**REDIRECTION TIME**~~@@\n    // THIS IS WHAT WE CAME HER FOR PPL1//\n    console.log(\"looking up \", req.params.id);\n    return Link.findOne({link_id: req.params.id})\n        .then(result => {\n            if(result) res.redirect(result.expandedUrl); // i.e. www.nickpalenchar.com\n            else res.redirect('/error?code=404'); // beginning with a slash will go to the error route within our app.\n        })\n});\n```\n\n\nCreating links is a bit more complicated, we need to consider:\n\n+ What characters can make up a shortened link\n+ How to prevent duplicate shortened links from being created\n+ How to allow custom shortened link names to override randomly created shortened link names, without conflicting with reserved routes.\n\nChoosing the allowed characters and randomly generating a shortened link name is a matter of a utility function:\n\n([view on github](https://github.com/nickpalencharOpen/tinytiny/blob/master/helper/index.js))\n\n```javascript\nmodule.exports.randomHash = function(num=2) {\n    let validChars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    let result = '';\n\n    // loop through a number of times specfied when calling (`num`) creating a random string of that length.\n    for(let i = 0; i \u003C num; i++){\n        result += validChars[Math.floor(Math.random() * validChars.length)]; // concatonate a single random character\n    }\n    return result;\n};\n```\n\nI'm choosing to start my random shortened link names to be especially small, 2 characters long. I chose this because there will not be much scale in users (I'm restricting signups to my family, of which none of them are interested in using it ¯\\\\\\_(ツ)\\_/¯ ). Still, the possible combination of links will quickly fill up, with the chance of a duplicate being produced likely to happen faster still.\n\nWe need a way to both try again if the produced name is taken, and to _increase_ the possible number of available names, should the majority be taken.\n\n```javascript\nfunction tryLink(n=defaultStartLength, attempt=1){\n    // randomly tries to find an available link\n    return new Promise((resolve, reject) => {\n        let id = req.body.customName || randomHash(n); // only make a random name\n        return Link.find({link_id: id})\n            .then(result => {\n                if(result.length) {\n                    if(attempt > 100) reject({nick:true, error: \"Gave up finding an available link\", body: \"This might be solved \" +\n                    \"if you try again. If not, the admin might have to expand the algorithm. Wow this app grew quick!\"});\n                    else return tryLink(n+1, attempt+1);\n                }\n                if(reserved.includes(id.toLowerCase())){\n                    reject({ nick:true, error: \"Link is a reserved word\", body: \"You can't use that! Because programming needs. \" +\n                    \"Try something else. Please note that no uppercase version of the reserved word can be used either, \" +\n                    \"to avoid ambiguity.\"});\n                }\n                else return Link.create({link_id: id, expandedUrl, author: req.user._id})\n                    .then(result => resolve(result));\n            })\n    })\n}\n```\n\n\nThis function wraps a Promise around Mongo lookups, so when our api calls it, we can `.then` off it once, and the final result will be accessible for us to use.\n\nIt starts by storing a variable either by a customName (passed in from `req.body`, via a user input form), or a random name (using the util function described earlier).\n\nIn both cases we want to make sure the link isn't previously in use, by looking up a Link with `link_id` equal to the name in question. If there is _not_ any document returned, the name has no document and therefore is not in use. A final check is to make sure the name does not conflict with any reserved routes. Reserved routes are kept as an Array in a separate json file and `requireelif in (as `reserved`). We can use `Array.includes`, an ES2016 feature, can be used to make sure the name we came up with is not contained here.\n\nIf we find a result, we try again, recursively calling the function. By wraping the entire function in a Promise, and only invoking a resolve in a non-recursive, ending case, we can easily handle the asynchronous nature of Mongo lookups within our recursive calls. The recursive call also increments the length of the random name to generate by 1 _and_ keeps track of how many times it has been recursively called, using a second parameter left alone at the start. This is important--increasing the length after a failed attempt expands the available link names as the app scales, and keeping track of attempts allows me to add an additional fail-safe: to avoid running into, say, an infinite loop by means of something I might have overlooked, we break and error out after the 100th attempt.\n\n\nThe full middleware for this is described below:\n\n([view on github](https://github.com/nickpalencharOpen/tinytiny/blob/master/routes/api.js#L17-L53))\n\n\n```javascript\nrouter.post('/new-link', requireAuthentication ,(req, res) => {\n    let { expandedUrl, customName } = req.body;\n    if(!/^https?:\\/\\//.test(expandedUrl)) expandedUrl = \"http://\" + expandedUrl; // add `http://` if not already provided, for consistency.\n\n    tryLink()\n        .then(result => {\n            res.redirect('/dashboard?success=' + JSON.stringify(result));\n        })\n        .catch( err => {\n            if(err.nick) res.render('error', {err} );\n            else res.redirect('/error?code=1');\n        })\n});\n```\n\nWith these two features in place, you have a minimal app that creates fun little links to easily send around! There's is of course a lot more to this app besides this core feature. Getting into the project will show a lot of additional design for the front end views, authentication/user restriction, security, and so much more. While these two aspects are critical to the app's use, it only scratches the the very top surface in terms of how the app is made. If you really want to level up your coding skills, I would be honored if you checkd out the [open source project](https://www.github.com/nickpalencharOpen/tinytiny) and consider getting involved. I am actively maintaining the app and would love to work with you! 🙌🙌🙌","content/posts/url-shortener.md","cb50cd27240bf121",{"html":626,"metadata":627},"\u003Cp>About a year back I had an on-site interview at a very large finance company. I spent the day meeting engineers from every department, and was asked to whiteboard solutions to many problems. Some were very mathmatical algorithms, others were architectures for things like microservices and AWS. Among the questions, my favorite was making a URL shortener, similar to bit.ly.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>THE CHALLENGE\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>Design a URL shortener app. It should have a dashboard for users that can submit a link to be shortened. The app will generate a shortened version (using its own domain) that would redirect to the URL when navigated to.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>EXAMPLE\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>Submitting www.averylonglink.com/with/additional/routes would produce shortener.io/ohk4 (or something like that). Navigating to shortener.io/ohk4 would load www.averylonglink.com/with/additional/routes.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>There was no coding, or talk of specific technologies. However, fast-forward to 8 months later, we have a chosen stack and a deployed app.\u003C/p>\n\u003Cp>\u003Cimg src=\"http://www.nickpalenserve.us/public/images/palento_home.png\" alt=\"\" title=\"The home page.\">\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cimg src=\"http://www.nickpalenserve.us/public/images/palento_dashboard.png\" alt=\"\" title=\"The dashboard.\">\u003C/p>\n\u003Cp>The end result is palen-to (The first two syllables of my last name, and the .to TLD).\u003C/p>\n\u003Cp>Most of the original considerations from the interview room went into the implementation (with more on the way). Among these were:\u003C/p>\n\u003Cul>\n\u003Cli>A way to randomly generate a URL.\u003C/li>\n\u003Cli>A way to ensure all URLs are unique.\u003C/li>\n\u003Cli>A way to make custom shortened URL names.\u003C/li>\n\u003Cli>A way to preview potentially malicious redirects (planned)\u003C/li>\n\u003C/ul>\n\u003Cp>Because Palen-to is branded with my last name, I’m only allowing signups from family members that share it. So I’ve since built in the following feature:\u003C/p>\n\u003Cul>\n\u003Cli>Sign-up restricted to whitelisted individuals.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"how-its-made\">How it’s made.\u003C/h2>\n\u003Cp>I’ve built a minimal implementation as a fullstack javascript application. Here’s the stack with some pertinent technologies:\u003C/p>\n\u003Cul>\n\u003Cli>Static HTML [Frontend]\n\u003Cul>\n\u003Cli>Bootstrap 3 components (minimal)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Node/expressJS [Server]\n\u003Cul>\n\u003Cli>\u003Ca href=\"http://node-swig.github.io/swig-templates\">Swig\u003C/a> rendering.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>MongoDB [Database]\u003C/li>\n\u003C/ul>\n\u003Cp>That’s it! Simple, no?\u003C/p>\n\u003Ch3 id=\"setting-up-redirect-routes\">Setting up redirect routes.\u003C/h3>\n\u003Cp>Obviously, the name of the game is looking up dynamic shortened routes and redirecting to a specified longer URL. But that’s not the \u003Cem>only\u003C/em> thing this app should do. Like any well-designed app, this one should have a dashboard and functional routes that allow users to create redirects. These \u003Cem>static\u003C/em> (or hard-coded, pre-defined) routes should \u003Cem>not\u003C/em> cause a redirect but instead render our own internal views or api functionality.\u003C/p>\n\u003Cp>So let’s start by defining some views:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>/           -> Landing Page/login\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>/dashboard  -> Swig-rendered list of redirect routes made, and a field to make new ones.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>/error      -> Rendering of errors\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>/api/*      -> Namespace for different api routes, to allow things like a POST request for making new urls\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>/:redirect  -> All the rest will attempt to lookup and redirect a short route to a url.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>It’s important to node re: Express, that the order of these routes are \u003Cem>very important\u003C/em>. In general, important/static routes should go first, and dynamic/general routes should go second/last. Express will trigger middlewere the first time it’s match. Take this simple example.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">app.\u003C/span>\u003Cspan style=\"color:#B392F0\">get\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/:redirectURL'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, (\u003C/span>\u003Cspan style=\"color:#FFAB70\">req\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">res\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> res.\u003C/span>\u003Cspan style=\"color:#B392F0\">status\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">308\u003C/span>\u003Cspan style=\"color:#E1E4E8\">).\u003C/span>\u003Cspan style=\"color:#B392F0\">send\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'this would be the redirect'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">app.\u003C/span>\u003Cspan style=\"color:#B392F0\">get\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/dashboard'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, (\u003C/span>\u003Cspan style=\"color:#FFAB70\">req\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">res\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> res.\u003C/span>\u003Cspan style=\"color:#B392F0\">status\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">200\u003C/span>\u003Cspan style=\"color:#E1E4E8\">).\u003C/span>\u003Cspan style=\"color:#B392F0\">send\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'got the dashboard!'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Since the first route is a param (preceeded by a \u003Ccode>:\u003C/code>), the route would act as a wild card, catching any named route, \u003Cem>including\u003C/em> dashboard. If you tried to get to your actual dashboard, we would be intercepted by a redirect lookup every time!\u003C/p>\n\u003Cp>We can reverse these without the inverse being true, however. If \u003Ccode>/dashboard\u003C/code> came first, any top level route that wasn’t \u003Ccode>/dashboard\u003C/code> would skip that middleware and eventually find its way to the redirect lookup.\u003C/p>\n\u003Cp>In the full example, all of these pre-defined routes should go before the redirectURL.\u003C/p>\n\u003Ch3 id=\"creating-and-looking-up-redirect-links\">Creating and looking up redirect links.\u003C/h3>\n\u003Cp>Enough planning, let’s dive into the main course: the actual shortening of the links. I’ve opensourced Palen-to into a generic app ready for cloning and deploying, called \u003Ca href=\"TinyTiny\">https://github.com/nickpalencharopen/tinytiny\u003C/a>. I’ll refer to the code there when going into detail about the app, but will refer to the domain where my version is deployed to: \u003Ca href=\"https://palen.to\">palen.to\u003C/a>. Feel free to clone the opensource version and follow along, or view on GitHub!\u003C/p>\n\u003Ch4 id=\"data-model\">Data model.\u003C/h4>\n\u003Cp>There’s only one important data model here, the \u003Ccode>Link\u003C/code>. Every url gets shortened to a unique route in the app, such as \u003Ccode>'abc'\u003C/code> in \u003Ccode>palen.to/abc\u003C/code>. And that identifier has a one-to-one relation with the expanded url. Both these\u003C/p>\n\u003Cp>Assuming the request is not a reserved route (such as \u003Ccode>palen.to/dashboard\u003C/code>), we should look up the document in the data model by that route. There we can find the full URL to direct to. In the data model, we have the following values:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>link_id\u003C/strong>: The shortened link (\u003Ccode>abc\u003C/code> in \u003Ccode>palen.to/abc\u003C/code>). Also serves as the unique id for the document (looking up documents by the native Mongo \u003Ccode>_id\u003C/code> is not nescessary).\u003C/li>\n\u003Cli>\u003Cstrong>expandedUrl\u003C/strong>: The full url that the shortened route is supposed to redirect to (i.e. \u003Ccode>www.nickpalenchar.com\u003C/code>).\u003C/li>\n\u003C/ul>\n\u003Cp>Additionally, we’ll add some meta data to the model. Knowing the user that made the shortened link is always helpful for getting list of links for a logged in user, and auditing purposes. A creation date is always a good idea as well.\u003C/p>\n\u003Cp>The full schema of the Link model looks like this! (\u003Ca href=\"https://github.com/nickpalencharOpen/tinytiny/blob/master/models/link.js\">view on github\u003C/a>):\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> mongoose \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> require\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'mongoose'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> LinkSchema \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> mongoose.\u003C/span>\u003Cspan style=\"color:#B392F0\">Schema\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    link_id: {type: String, unique: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, required: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">},\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    expandedUrl: String,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    author: { type: mongoose.Schema.Types.ObjectId, ref: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'User'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, required: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    creationDate: { type: Date, default: Date.now }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">mongoose.\u003C/span>\u003Cspan style=\"color:#B392F0\">model\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Link'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, LinkSchema);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Getting a redirect route is a matter of finding a Link document by its \u003Ccode>link_id\u003C/code>. If we get a document back, we can use the \u003Ccode>expandedUrl\u003C/code> property for the redirection. Express makes redirects very easy, just call the \u003Ccode>res.redirect\u003C/code> method and “Bam!”, you get to your destination. If we can’t find a document, we send back an internal 404.\u003C/p>\n\u003Cp>(\u003Ca href=\"https://github.com/nickpalencharOpen/tinytiny/blob/master/app.js#L121-L130\">view on github\u003C/a>)\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">app.\u003C/span>\u003Cspan style=\"color:#B392F0\">get\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/:id'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, (\u003C/span>\u003Cspan style=\"color:#FFAB70\">req\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">res\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    //@@~~**REDIRECTION TIME**~~@@\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // THIS IS WHAT WE CAME HER FOR PPL1//\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"looking up \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, req.params.id);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Link.\u003C/span>\u003Cspan style=\"color:#B392F0\">findOne\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({link_id: req.params.id})\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">then\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">result\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            if\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result) res.\u003C/span>\u003Cspan style=\"color:#B392F0\">redirect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result.expandedUrl); \u003C/span>\u003Cspan style=\"color:#6A737D\">// i.e. www.nickpalenchar.com\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> res.\u003C/span>\u003Cspan style=\"color:#B392F0\">redirect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/error?code=404'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// beginning with a slash will go to the error route within our app.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Creating links is a bit more complicated, we need to consider:\u003C/p>\n\u003Cul>\n\u003Cli>What characters can make up a shortened link\u003C/li>\n\u003Cli>How to prevent duplicate shortened links from being created\u003C/li>\n\u003Cli>How to allow custom shortened link names to override randomly created shortened link names, without conflicting with reserved routes.\u003C/li>\n\u003C/ul>\n\u003Cp>Choosing the allowed characters and randomly generating a shortened link name is a matter of a utility function:\u003C/p>\n\u003Cp>(\u003Ca href=\"https://github.com/nickpalencharOpen/tinytiny/blob/master/helper/index.js\">view on github\u003C/a>)\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">module\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#79B8FF\">exports\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">randomHash\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">num\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> validChars \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ''\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // loop through a number of times specfied when calling (`num`) creating a random string of that length.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    for\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> i \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; i \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> num; i\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003Cspan style=\"color:#E1E4E8\">){\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        result \u003C/span>\u003Cspan style=\"color:#F97583\">+=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> validChars[Math.\u003C/span>\u003Cspan style=\"color:#B392F0\">floor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Math.\u003C/span>\u003Cspan style=\"color:#B392F0\">random\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> validChars.\u003C/span>\u003Cspan style=\"color:#79B8FF\">length\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)]; \u003C/span>\u003Cspan style=\"color:#6A737D\">// concatonate a single random character\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>I’m choosing to start my random shortened link names to be especially small, 2 characters long. I chose this because there will not be much scale in users (I’m restricting signups to my family, of which none of them are interested in using it ¯\\_(ツ)_/¯ ). Still, the possible combination of links will quickly fill up, with the chance of a duplicate being produced likely to happen faster still.\u003C/p>\n\u003Cp>We need a way to both try again if the produced name is taken, and to \u003Cem>increase\u003C/em> the possible number of available names, should the majority be taken.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> tryLink\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">n\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">defaultStartLength, \u003C/span>\u003Cspan style=\"color:#FFAB70\">attempt\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">){\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // randomly tries to find an available link\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#79B8FF\"> Promise\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((\u003C/span>\u003Cspan style=\"color:#FFAB70\">resolve\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">reject\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> id \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> req.body.customName \u003C/span>\u003Cspan style=\"color:#F97583\">||\u003C/span>\u003Cspan style=\"color:#B392F0\"> randomHash\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(n); \u003C/span>\u003Cspan style=\"color:#6A737D\">// only make a random name\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Link.\u003C/span>\u003Cspan style=\"color:#B392F0\">find\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({link_id: id})\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">then\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">result\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                if\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result.\u003C/span>\u003Cspan style=\"color:#79B8FF\">length\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(attempt \u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 100\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#B392F0\">reject\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({nick:\u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, error: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Gave up finding an available link\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, body: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"This might be solved \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">                    \"if you try again. If not, the admin might have to expand the algorithm. Wow this app grew quick!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                    else\u003C/span>\u003Cspan style=\"color:#F97583\"> return\u003C/span>\u003Cspan style=\"color:#B392F0\"> tryLink\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(n\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, attempt\u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                if\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(reserved.\u003C/span>\u003Cspan style=\"color:#B392F0\">includes\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(id.\u003C/span>\u003Cspan style=\"color:#B392F0\">toLowerCase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())){\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">                    reject\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ nick:\u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, error: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Link is a reserved word\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, body: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"You can't use that! Because programming needs. \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">                    \"Try something else. Please note that no uppercase version of the reserved word can be used either, \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">                    \"to avoid ambiguity.\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                else\u003C/span>\u003Cspan style=\"color:#F97583\"> return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Link.\u003C/span>\u003Cspan style=\"color:#B392F0\">create\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({link_id: id, expandedUrl, author: req.user._id})\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                    .\u003C/span>\u003Cspan style=\"color:#B392F0\">then\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">result\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#B392F0\"> resolve\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>This function wraps a Promise around Mongo lookups, so when our api calls it, we can \u003Ccode>.then\u003C/code> off it once, and the final result will be accessible for us to use.\u003C/p>\n\u003Cp>It starts by storing a variable either by a customName (passed in from \u003Ccode>req.body\u003C/code>, via a user input form), or a random name (using the util function described earlier).\u003C/p>\n\u003Cp>In both cases we want to make sure the link isn’t previously in use, by looking up a Link with \u003Ccode>link_id\u003C/code> equal to the name in question. If there is \u003Cem>not\u003C/em> any document returned, the name has no document and therefore is not in use. A final check is to make sure the name does not conflict with any reserved routes. Reserved routes are kept as an Array in a separate json file and \u003Ccode>requireelif in (as \u003C/code>reserved\u003Ccode>). We can use \u003C/code>Array.includes`, an ES2016 feature, can be used to make sure the name we came up with is not contained here.\u003C/p>\n\u003Cp>If we find a result, we try again, recursively calling the function. By wraping the entire function in a Promise, and only invoking a resolve in a non-recursive, ending case, we can easily handle the asynchronous nature of Mongo lookups within our recursive calls. The recursive call also increments the length of the random name to generate by 1 \u003Cem>and\u003C/em> keeps track of how many times it has been recursively called, using a second parameter left alone at the start. This is important—increasing the length after a failed attempt expands the available link names as the app scales, and keeping track of attempts allows me to add an additional fail-safe: to avoid running into, say, an infinite loop by means of something I might have overlooked, we break and error out after the 100th attempt.\u003C/p>\n\u003Cp>The full middleware for this is described below:\u003C/p>\n\u003Cp>(\u003Ca href=\"https://github.com/nickpalencharOpen/tinytiny/blob/master/routes/api.js#L17-L53\">view on github\u003C/a>)\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"javascript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">router.\u003C/span>\u003Cspan style=\"color:#B392F0\">post\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/new-link'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, requireAuthentication ,(\u003C/span>\u003Cspan style=\"color:#FFAB70\">req\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">res\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { expandedUrl, customName } \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> req.body;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">!\u003C/span>\u003Cspan style=\"color:#9ECBFF\">/\u003C/span>\u003Cspan style=\"color:#F97583\">^\u003C/span>\u003Cspan style=\"color:#DBEDFF\">https\u003C/span>\u003Cspan style=\"color:#F97583\">?\u003C/span>\u003Cspan style=\"color:#DBEDFF\">:\u003C/span>\u003Cspan style=\"color:#85E89D;font-weight:bold\">\\/\\/\u003C/span>\u003Cspan style=\"color:#9ECBFF\">/\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">test\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(expandedUrl)) expandedUrl \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"http://\"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> expandedUrl; \u003C/span>\u003Cspan style=\"color:#6A737D\">// add `http://` if not already provided, for consistency.\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    tryLink\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">then\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">result\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            res.\u003C/span>\u003Cspan style=\"color:#B392F0\">redirect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/dashboard?success='\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#79B8FF\"> JSON\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">stringify\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">( \u003C/span>\u003Cspan style=\"color:#FFAB70\">err\u003C/span>\u003Cspan style=\"color:#F97583\"> =>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            if\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(err.nick) res.\u003C/span>\u003Cspan style=\"color:#B392F0\">render\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'error'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, {err} );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> res.\u003C/span>\u003Cspan style=\"color:#B392F0\">redirect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/error?code=1'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>With these two features in place, you have a minimal app that creates fun little links to easily send around! There’s is of course a lot more to this app besides this core feature. Getting into the project will show a lot of additional design for the front end views, authentication/user restriction, security, and so much more. While these two aspects are critical to the app’s use, it only scratches the the very top surface in terms of how the app is made. If you really want to level up your coding skills, I would be honored if you checkd out the \u003Ca href=\"https://www.github.com/nickpalencharOpen/tinytiny\">open source project\u003C/a> and consider getting involved. I am actively maintaining the app and would love to work with you! 🙌🙌🙌\u003C/p>",{"headings":628,"localImagePaths":642,"remoteImagePaths":643,"frontmatter":644,"imagePaths":648},[629,632,635,638],{"depth":27,"slug":630,"text":631},"how-its-made","How it’s made.",{"depth":136,"slug":633,"text":634},"setting-up-redirect-routes","Setting up redirect routes.",{"depth":136,"slug":636,"text":637},"creating-and-looking-up-redirect-links","Creating and looking up redirect links.",{"depth":639,"slug":640,"text":641},4,"data-model","Data model.",[],[],{"title":617,"date":645,"tags":646,"external":16,"minutesRead":647},["Date","2018-03-31T15:22:20.000Z"],[620,621],"9 min read",[],"projects",["Map",651,652,670,671,687,688],"design-system-boilerplate",{"id":651,"data":653,"filePath":658,"digest":659,"rendered":660},{"title":654,"description":655,"date":656,"url":657},"A design system boilerplate with multiple themes","It's a beautiful world out there.",["Date","2022-02-13T00:00:00.000Z"],"https://design-system-boilerplate.netlify.app","content/projects/design-system-boilerplate.md","adf4d2533ffd860b",{"html":661,"metadata":662},"",{"headings":663,"localImagePaths":664,"remoteImagePaths":665,"frontmatter":666,"imagePaths":669},[],[],[],{"title":654,"description":655,"date":667,"url":657,"minutesRead":668},["Date","2022-02-13T00:00:00.000Z"],"0 min read",[],"dev-landing-page",{"id":670,"data":672,"filePath":677,"digest":678,"rendered":679},{"title":673,"description":674,"date":675,"url":676},"A minimal landing page for developers","A minimal landing page for developers.",["Date","2018-04-06T00:00:00.000Z"],"https://github.com/flexdinesh/dev-landing-page","content/projects/dev-landing-page.md","4afd223f5a9ac5bd",{"html":661,"metadata":680},{"headings":681,"localImagePaths":682,"remoteImagePaths":683,"frontmatter":684,"imagePaths":686},[],[],[],{"title":673,"description":674,"date":685,"url":676,"minutesRead":668},["Date","2018-04-06T00:00:00.000Z"],[],"draft-project",{"id":687,"data":689,"filePath":694,"digest":695,"rendered":696},{"title":690,"description":691,"date":692,"url":693,"draft":240},"Draft link","This link is a draft and won't be built.",["Date","2022-02-22T00:00:00.000Z"],"https://abc.xyz","content/projects/draft-project.md","7e046d346055822b",{"html":661,"metadata":697},{"headings":698,"localImagePaths":699,"remoteImagePaths":700,"frontmatter":701,"imagePaths":703},[],[],[],{"draft":240,"title":690,"description":691,"date":702,"url":693,"minutesRead":668},["Date","2022-02-22T00:00:00.000Z"],[]]